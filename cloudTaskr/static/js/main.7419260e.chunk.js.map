{"version":3,"sources":["services/base.js","services/index.js","Components/LoginForm/LoginForm.jsx","Components/Menu/Menu.jsx","Components/BackgroundWithOverlay/BackgroundWithOverlay.jsx","Components/Landing/Landing.jsx","Components/SignUp/Signup.jsx","Components/Loading/Loading.js","Components/Account/Zones/Zones.jsx","Components/Account/Account.jsx","Containers/LoginPage/Login.jsx","Components/Login/Login.jsx","Components/Messages/Welcome.jsx","Components/Task/DisplayTaskDetails.jsx","Components/Task/DisplayControls.jsx","Components/Task/ShowTask.jsx","Components/Task/ShowTasks.jsx","Containers/TaskPage/TaskList.jsx","Containers/TaskPage/Task.jsx","Components/test-tasks/addTask.jsx","Components/test-tasks/taskList.jsx","Components/test-tasks/editTask.jsx","Components/test-tasks/deleteTask.jsx","Components/ZoneSearchInput/ZoneSearchInput.jsx","App.js","serviceWorker.js","history.js","index.js"],"names":["baseURL","console","log","service","axios","create","withCredentials","actions","isLoggedIn","a","async","get","signUp","user","post","logIn","logOut","LoginForm","props","handleInput","e","setState","target","name","value","handleFormSubmit","event","preventDefault","state","email","password","then","response","setUser","data","history","push","fetchData","catch","err","toggleLoginButtonOff","classesAndIds","formType","values","labels","formClassName","formGroupEmailId","formGroupEmailClass","formGroupPassword","formGroupPasswordClass","formButtonClass","String","this","Form","className","onSubmit","Group","controlId","Label","Control","type","placeholder","defaultValue","onChange","Button","Component","Menu","toggleLoginButton","loginSection","document","getElementById","toggle","hideButton","classList","remove","add","handleLoginForm","Axios","setFlashMessage","handleChange","Navbar","bg","variant","id","to","Brand","Nav","Link","userObj","style","color","icon","faUser","username","onClick","logout","React","BackgroundWithOverlay","background","backgroundImage","imgUrl","position","top","left","height","width","zIndex","backgroundSize","backgroundRepeat","overlay","backgroundColor","alpha","Landing","Jumbotron","Signup","handleSignUpForm","Math","floor","random","Container","loading","Zones","handleZoneUpdate","updateZones","zones","address","lat","lng","getUser","handleZonesChange","clearHandleZoneChange","handleSelect","geocodeByAddress","results","getLatLng","latLng","error","zoneName","ready","Row","Col","onSelect","getInputProps","suggestions","getSuggestionItemProps","FormLabel","toUpperCase","InputGroup","FormControl","Append","faSave","faStopCircle","map","suggestion","active","cursor","description","pageBackground","Account","handleUsernameUpdate","update","handleNameUpdate","firstName","lastName","taskDataIsReady","Login","checkIfUser","LogIn","Welcome","message","welcome","DisplayTaskDetails","title","DisplayControls","theId","faEdit","faTrash","ShowTask","Card","key","task","_id","ShowTasks","Object","keys","tasks","length","TaskList","viewableTasks","Task","checkForTasks","filterTaskList","faCloud","listItem","faInbox","faHome","faBriefcase","faPlus","addTask","handleAddTask","showAddTaskMenu","required","aria-label","aria-describedby","deleteTask","taskID","displayAllTasks","margin","faEllipsisV","addTaskMenu","sm","searchTasksInput","EditTask","handleUpdateTask","match","params","res","faList","FormGroup","delete","LocationSearchInput","App","setFeedbackMessage","setTimeout","apiIsAwake","listOfTasks","userLoggedIn","itIsSuccess","successMsg","errorMsg","searchTaskInput","currentSearchValue","filteredTasks","filter","eachTask","toLowerCase","includes","Alert","exact","path","render","component","ZoneSearchInput","Boolean","window","location","hostname","createBrowserHistory","ReactDOM","basename","process","navigator","serviceWorker","registration","unregister"],"mappings":"uWAOiBA,EAHF,mC,2DCDfC,QAAQC,IAAIF,GAMZ,IAAMG,EAAUC,IAAMC,OAAO,CAAEC,iBAAiB,EAAMN,YAiBvCO,EAfC,CACdC,WAAY,oBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACGN,EAAQQ,IAAI,oBADf,8EAGZC,OAAQ,SAAMC,GAAN,SAAAJ,EAAAC,OAAA,kEAAAD,EAAA,MACON,EAAQW,KAAK,cAAeD,IADnC,8EAGRE,MAAO,SAAMF,GAAN,SAAAJ,EAAAC,OAAA,kEAAAD,EAAA,MACQN,EAAQW,KAAK,aAAcD,IADnC,8EAGPG,OAAQ,oBAAAP,EAAAC,OAAA,kEAAAD,EAAA,MACON,EAAQQ,IAAI,gBADnB,+ECVWM,G,kBACnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAYRC,YAAc,SAAAC,GAAC,OAAI,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,SAb1C,EAenBC,iBAAmB,SAAAC,GAGjB,GAFAA,EAAMC,iBAEF,EAAKC,MAAMC,MAAO,CACpB,IAAIhB,EAAO,CACTgB,MAAO,EAAKD,MAAMC,MAClBC,SAAU,EAAKF,MAAME,UAMvBvB,EACGQ,MAAMF,GACNkB,MAAK,SAAAC,GAEJ,EAAKX,SAAS,CACZQ,MAAO,GACPC,SAAU,KAEZ,EAAKZ,MAAMe,QAAQD,EAASE,MAC5B,EAAKhB,MAAMiB,QAAQC,KAAK,SACxB,EAAKlB,MAAMmB,eAEZC,OAAM,SAAAC,YAMT,EAAKC,wBA7CU,EAiDnBC,cAAgB,SAAAC,GACd,IAAIC,EAAQC,EACK,SAAbF,GACFC,EAAS,CACPE,cAAe,kBACfC,iBAAkB,YAClBC,oBAAqB,eACrBC,kBAAmB,eACnBC,uBAAwB,eACxBC,gBAAiB,2BAEnBN,GAAS,GACa,SAAbF,IACTC,EAAS,CACPE,cAAe,aACfC,iBAAkB,iBAClBC,oBAAqB,gBACrBC,kBAAmB,gBACnBC,uBAAwB,gBACxBC,gBAAiB,IAEnBN,GAAS,GAEX,EAAKvB,SAAS,CACZoB,cAAc,eAAME,GACpBC,OAAQA,KAxEV,EAAKhB,MAAQ,CACXC,MAAOsB,OACPrB,SAAUqB,OACVV,cAAe,GACfG,QAAQ,GANO,E,iFAWjBQ,KAAKX,cAAcW,KAAKlC,MAAMwB,Y,+BAmE9B,OACE,oCACE,kBAACW,EAAA,EAAD,CACEC,UAAWF,KAAKxB,MAAMa,cAAcI,cACpCU,SAAUH,KAAK3B,kBAEf,kBAAC4B,EAAA,EAAKG,MAAN,CACEC,UAAWL,KAAKxB,MAAMa,cAAcK,iBACpCQ,UAAWF,KAAKxB,MAAMa,cAAcM,qBAEnCK,KAAKxB,MAAMgB,QAAU,kBAACS,EAAA,EAAKK,MAAN,cACtB,kBAACL,EAAA,EAAKM,QAAN,CACEpC,KAAK,QACLqC,KAAK,QACLC,YAAY,cACZC,aAAcV,KAAKxB,MAAMC,MACzBkC,SAAUX,KAAKjC,eAInB,kBAACkC,EAAA,EAAKG,MAAN,CACEC,UAAWL,KAAKxB,MAAMa,cAAcO,kBACpCM,UAAWF,KAAKxB,MAAMa,cAAcQ,wBAEnCG,KAAKxB,MAAMgB,QAAU,kBAACS,EAAA,EAAKK,MAAN,iBACtB,kBAACL,EAAA,EAAKM,QAAN,CACEpC,KAAK,WACLqC,KAAK,WACLC,YAAY,WACZC,aAAcV,KAAKxB,MAAME,SACzBiC,SAAUX,KAAKjC,eAInB,kBAACkC,EAAA,EAAKG,MAAN,KACE,kBAACQ,EAAA,EAAD,CACEV,UAAWF,KAAKxB,MAAMa,cAAcS,gBACpCU,KAAK,UAFP,gB,GAlH2BK,c,2CCKlBC,E,YACnB,WAAYhD,GAAQ,IAAD,8BACjB,4CAAMA,KAORiD,kBAAoB,SAAA/C,GAClB,IAAIgD,EAAeC,SAASC,eAAe,cACvCC,GAAU,EAAK3C,MAAM4C,WACzB,EAAKnD,SAAS,CAAEmD,WAAYD,IAE5BH,EAAaK,UAAUC,OAAO,UAC9BN,EAAaK,UAAUE,IAAI,WAdV,EAiBnBnC,qBAAuB,SAAApB,GACrB,IAAIgD,EAAeC,SAASC,eAAe,cACvCC,GAAU,EAAK3C,MAAM4C,WACzB,EAAKnD,SAAS,CAAEmD,WAAYD,IAE5BH,EAAaK,UAAUC,OAAO,UAC9BN,EAAaK,UAAUE,IAAI,WAvBV,EA0BnBC,gBAAkB,SAAAlD,GAGhB,GAFAA,EAAMC,iBAEF,EAAKC,MAAMC,MAAO,CACpB,IAAIhB,EAAO,CACTgB,MAAO,EAAKD,MAAMC,MAClBC,SAAU,EAAKF,MAAME,UAIvB+C,IAAM/D,KAAN,UAAcd,EAAd,cAAmCa,EAAM,CACvCP,iBAAiB,IAEhByB,MAAK,SAAAC,GAEJ,EAAKX,SAAS,CACZQ,MAAO,GACPC,SAAU,KAEZ,EAAKZ,MAAMe,QAAQD,EAASE,MAC5B,EAAKhB,MAAMmB,YACX,EAAKnB,MAAMiB,QAAQC,KAAK,SACxB,EAAKlB,MAAM4D,gBAAgB,oBAAoB,MAEhDxC,OAAM,SAAAC,GAELtC,QAAQC,IAAIqC,WAIhBtC,QAAQC,IAAI,wCACZ,EAAKsC,wBAzDU,EA6DnBuC,aAAe,SAAArD,GACb,EAAKL,SAAL,eAAiBK,EAAMJ,OAAOC,KAAOG,EAAMJ,OAAOE,SA5DlD,EAAKI,MAAQ,CACXC,MAAO,GACPC,SAAU,GACV0C,YAAY,GALG,E,sEAkEjB,OACE,kBAACQ,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,GAAI/B,KAAKlC,MAAMiE,IAE9C,kBAAC,gBAAD,CAAeC,GAAG,KAChB,kBAACJ,EAAA,EAAOK,MAAR,oBAEF,kBAACC,EAAA,EAAD,CAAKhC,UAAU,WACb,kBAAC,gBAAD,CAAe8B,GAAG,KAChB,kBAACE,EAAA,EAAIC,KAAL,cAEDnC,KAAKlC,MAAMsE,QACV,kBAAC,gBAAD,CAAeJ,GAAG,SAChB,kBAACE,EAAA,EAAIC,KAAL,cAGF,sCAMHnC,KAAKlC,MAAMsE,QACV,kBAACF,EAAA,EAAD,KACE,kBAAC,gBAAD,CAAeF,GAAG,YAChB,kBAACE,EAAA,EAAIC,KAAL,CAAUjC,UAAU,WAClB,wBAAImC,MAAO,CAAEC,MAAO,UAClB,kBAAC,IAAD,CAAiBC,KAAMC,MAAW,IACjCxC,KAAKlC,MAAMsE,QAAQK,YAI1B,kBAAC,gBAAD,CAAeT,GAAG,KAChB,kBAACE,EAAA,EAAIC,KAAL,CAAUjC,UAAU,UAAUwC,QAAS1C,KAAKlC,MAAM6E,QAAlD,YAMJ,oCACE,kBAACT,EAAA,EAAD,KACE,kBAAC,gBAAD,CAAeF,GAAG,WAChB,kBAACE,EAAA,EAAIC,KAAL,CAAUjC,UAAU,WAApB,YAIJ,kBAACgC,EAAA,EAAD,CAAKhC,UAAU,aACb,yBAAK6B,GAAG,aAAa7B,UAAU,UAC7B,kBAAC,EAAD,iBAAeF,KAAKlC,MAApB,CAA2BwB,SAAS,YAEX,IAA1BU,KAAKxB,MAAM4C,YACV,kBAACc,EAAA,EAAIC,KAAL,CAAUJ,GAAG,QAAQW,QAAS1C,KAAKe,mBAAnC,gB,GArHkB6B,IAAM/B,WCdzB,SAASgC,EAAsB/E,GAC5C,IAAIgF,EAAa,CACfC,gBACE,eAA+CjF,EAAMkF,OACvDC,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,OAAQ,OACRC,MAAO,OACPC,QAAS,EACTC,eAAgB,QAChBC,iBAAkB,QAGhBC,EAAU,CACZC,gBAAiB,iBAAmB5F,EAAM6F,MAAQ,IAClDV,SAAU,WACVC,IAAK,EACLC,KAAM,EACNE,MAAO,OACPD,OAAQ,QAGV,OACE,yBAAKf,MAAOS,GACV,yBAAKT,MAAOoB,K,aCfGG,G,mBACnB,WAAY9F,GAAQ,IAAD,8BACjB,4CAAMA,KACDU,MAAQ,GAFI,E,sEAOjB,OADA3B,QAAQC,IAAI,kBAEV,oCAEE,kBAAC+F,EAAD,CACEG,OAAO,0CACPW,MAAM,OAIR,kBAACE,EAAA,EAAD,CAAW3D,UAAU,kBACnB,wBAAIA,UAAU,iBAAd,6CAGA,6BACE,kBAAC,gBAAD,CAAe8B,GAAG,WAChB,kBAACpB,EAAA,EAAD,uBAMN,kBAAC,EAAD,eACEmB,GAAG,qBACC/B,KAAKlC,MAFX,CAGE6E,OAAQ3C,KAAKlC,MAAM6E,OACnB9D,QAASmB,KAAKlC,MAAMe,QACpBI,UAAWe,KAAKlC,MAAMmB,UACtByC,gBAAmB1B,KAAKlC,MAAM4D,mBAIhC,6BAASxB,UAAU,eACjB,yDAGF,6BAASA,UAAU,cACjB,0DAGF,6BAASA,UAAU,eACjB,+CAGF,4BAAQA,UAAU,iBAChB,oD,GApD2B0C,IAAM/B,Y,SCCtBiD,G,mBAKnB,WAAYhG,GAAQ,IAAD,8BACjB,4CAAMA,KAOR6D,aAAe,SAAArD,GACb,EAAKL,SAAL,eAAiBK,EAAMJ,OAAOC,KAAOG,EAAMJ,OAAOE,SATjC,EAYnB2F,iBAAmB,SAAAzF,GAGjB,GAFAA,EAAMC,iBAEF,EAAKC,MAAMC,MAAO,CACpB,IAAIhB,EAAO,CACTgB,MAAO,EAAKD,MAAMC,MAClBC,SAAU,EAAKF,MAAME,SACrB+D,SAAU,aAAeuB,KAAKC,MAAsB,IAAhBD,KAAKE,WAG3CzC,IAAM/D,KAAN,UAAcd,EAAd,eAAoCa,EAAM,CAAEP,iBAAiB,IAC1DyB,MAAK,SAAAC,GACJ,EAAKX,SAAS,CACZQ,MAAO,GACPC,SAAU,KAEZ,EAAKZ,MAAMiB,QAAQC,KAAK,SACxB,EAAKlB,MAAMe,QAAQD,EAASE,SAG7BI,OAAM,SAAAC,GAELtC,QAAQC,IAAIqC,QAlCD,EAuCnB4D,gBAAkB,CAChBA,gBACE,8DAvCF,EAAKvE,MAAQ,CACXC,MAAO,GACPC,SAAU,IAJK,E,sEA+CjB,OACE,oCACE,kBAAC,EAAD,eACEqD,GAAG,qBACC/B,KAAKlC,MAFX,CAGEF,OAAQoC,KAAKlC,MAAMF,OACnBiB,QAASmB,KAAKlC,MAAMe,QACpBI,UAAWe,KAAKlC,MAAMmB,UACtByC,gBAAiB1B,KAAKlC,MAAM4D,mBAE9B,yBAAKxB,UAAU,eAAemC,MAAOrC,KAAK+C,iBACxC,yBAAK7C,UAAU,qBAEjB,kBAACiE,EAAA,EAAD,CAAWjE,UAAU,qBACnB,2CACA,kBAACD,EAAA,EAAD,CAAMC,UAAU,eAAeC,SAAUH,KAAK+D,kBAC5C,kBAAC9D,EAAA,EAAKG,MAAN,CAAYC,UAAU,SACpB,kBAACJ,EAAA,EAAKK,MAAN,cACA,kBAACL,EAAA,EAAKM,QAAN,CACEpC,KAAK,QACLqC,KAAK,QACLC,YAAY,cACZC,aAAcV,KAAKxB,MAAMC,MACzBkC,SAAUX,KAAK2B,gBAInB,kBAAC1B,EAAA,EAAKG,MAAN,CAAYC,UAAU,YACpB,kBAACJ,EAAA,EAAKK,MAAN,iBACA,kBAACL,EAAA,EAAKM,QAAN,CACEpC,KAAK,WACLqC,KAAK,WACLC,YAAY,WACZC,aAAcV,KAAKxB,MAAME,SACzBiC,SAAUX,KAAK2B,gBAGnB,6BACE,kBAACf,EAAA,EAAD,CAAQJ,KAAK,UAAb,kB,GA1FsBK,c,QCVfuD,G,wLAEjB,OACE,yBAAKlE,UAAU,mBACb,8BACA,8BACA,mC,GAN6BW,c,2DCiBhBwD,E,YACnB,WAAYvG,GAAQ,IAAD,8BACjB,4CAAMA,KAaRwG,iBAAmB,SAAAhG,GACjBA,EAAMC,iBAEN,IAAIgG,EAAc,CAChBC,MAAO,CACLrG,KAAM,EAAKK,MAAMgG,MAAMrG,KACvBsG,QAAS,EAAKjG,MAAMgG,MAAMC,QAC1BC,IAAK,EAAKlG,MAAMgG,MAAME,IACtBC,IAAK,EAAKnG,MAAMgG,MAAMG,MAK1BlD,IAAM/D,KAAN,UAAcd,EAAd,0BAA+C2H,EAAa,CAC1DrH,iBAAiB,IAEhByB,MAAK,SAAAC,GACJ,EAAKd,MAAM4D,gBAAgB,iBAAiB,GAG5C,EAAK5D,MAAM8G,aAGZ1F,OAAM,SAAAC,GACLtC,QAAQC,IAAIqC,OAtCC,EA0CnB0F,kBAAoB,SAAAvG,GAClB,IAAIkG,EAAK,eAAQ,EAAKhG,MAAMgG,OAC5BA,EAAMlG,EAAMJ,OAAOC,MAAQG,EAAMJ,OAAOE,MAExC,EAAKH,SAAS,CAAEuG,MAAOA,KA9CN,EAkDnBM,sBAAwB,WACtB,EAAK7G,SAAS,CACZuG,MAAO,CACLrG,KAAM,GACNsG,QAAS,GACTC,IAAK,GACLC,IAAK,OAxDQ,EA6DnBhD,aAAe,SAAA8C,GAEb,EAAKxG,SAAS,CAAEuG,MAAO,CAAEC,QAASA,MA/DjB,EAkEnBM,aAAe,SAAAN,GACbO,2BAAiBP,GACd9F,MAAK,SAAAsG,GAAO,OAAIC,oBAAUD,EAAQ,OAClCtG,MAAK,SAAAwG,GACJtI,QAAQC,IAAI,UAAWqI,GACvB,EAAKlH,SAAS,CAEZuG,MAAO,CACLrG,KAAM,EAAKK,MAAMgG,MAAMrG,KACvBsG,QAASA,EACTC,IAAKS,EAAOT,IACZC,IAAKQ,EAAOR,OAGhB9H,QAAQC,IAAI,EAAK0B,UAElBU,OAAM,SAAAkG,GAAK,OAAIvI,QAAQuI,MAAM,QAASA,OA/EzC,EAAK5G,MAAQ,CAEXgG,MAAO,CACLrG,KAAM,EAAKL,MAAMsE,QAAQoC,MAAMrG,MAAQ,EAAKL,MAAMuH,SAClDZ,QAAS,EAAK3G,MAAMsE,QAAQoC,MAAMC,QAClCC,IAAK,EAAK5G,MAAMsE,QAAQoC,MAAME,IAC9BC,IAAK,EAAK7G,MAAMsE,QAAQoC,MAAMG,KAEhCW,OAAO,GAXQ,E,sEAoFT,IAAD,OAKP,OAHAzI,QAAQC,IAAIkD,KAAKxB,OAIf,kBAAC+G,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACvF,EAAA,EAAD,CAAME,SAAUH,KAAKsE,kBACnB,kBAAC,IAAD,CACEnG,KAAK,UACLC,MAAO4B,KAAKxB,MAAMgG,MAAMC,QACxB9D,SAAUX,KAAK2B,aACf8D,SAAUzF,KAAK+E,eAEd,gBACCW,EADD,EACCA,cACAC,EAFD,EAECA,YACAC,EAHD,EAGCA,uBACAxB,EAJD,EAICA,QAJD,OAMC,oCACE,kBAACyB,EAAA,EAAD,KAAY,EAAK/H,MAAMuH,SAASS,cAAhC,MACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EACKN,EAAc,CAChBjF,YAAa,oBACbP,UAAW,2BAGf,kBAAC8F,EAAA,EAAD,CACExF,KAAK,SACLrC,KAAK,OACLC,MAAO,EAAKI,MAAMgG,MAAMrG,OAK1B,kBAAC6H,EAAA,EAAD,CACExF,KAAK,SACLrC,KAAK,MACLC,MAAO,EAAKI,MAAMgG,MAAME,MAK1B,kBAACsB,EAAA,EAAD,CACExF,KAAK,SACLrC,KAAK,MACLC,MAAO,EAAKI,MAAMgG,MAAMG,MAM1B,kBAACoB,EAAA,EAAWE,OAAZ,KACE,kBAACrF,EAAA,EAAD,CACEkB,QAAQ,oBACRY,QAAS,EAAK4B,kBAEd,kBAAC,IAAD,CAAiB/B,KAAM2D,MAJzB,UAOF,kBAACH,EAAA,EAAWE,OAAZ,KACE,kBAACrF,EAAA,EAAD,CACEkB,QAAQ,oBACRY,QAAS,EAAKoC,uBAEd,kBAAC,IAAD,CAAiBvC,KAAM4D,MAJzB,YAQJ,yBAAKjG,UAAU,mCACZkE,GAAW,2CACXuB,EAAYS,KAAI,SAAAC,GACf,IAAMnG,EAAYmG,EAAWC,OACzB,0BACA,kBAEEjE,EAAQgE,EAAWC,OACrB,CAAE5C,gBAAiB,UAAW6C,OAAQ,WACtC,CAAE7C,gBAAiB,UAAW6C,OAAQ,WAC1C,OACE,wBACMX,EAAuBS,EAAY,CACrCnG,YACAmC,UAGF,8BAAOgE,EAAWG,6B,GA9KT5D,IAAM/B,WCNrC4F,EAAiB,CACnB1D,gBACE,gDAEiB2D,E,YACnB,WAAY5I,GAAQ,IAAD,8BACjB,4CAAMA,KAgBR6I,qBAAuB,SAAArI,GACrBA,EAAMC,iBAEN,IAAIqI,EAAS,CACXnE,SAAU,EAAKjE,MAAMiE,UAGvBhB,IAAM/D,KAAN,UAAcd,EAAd,6BAAkDgK,EAAQ,CACxD1J,iBAAiB,IAEhByB,MAAK,SAAAC,GAGJ,EAAKd,MAAMe,QAAQD,EAASE,MAC5B,EAAKhB,MAAM4D,gBAAgB,mBAAmB,MAG/CxC,OAAM,SAAAC,GACLtC,QAAQC,IAAIqC,OAnCC,EAuCnB0H,iBAAmB,SAAAvI,GACjBA,EAAMC,iBAEN,IAAIqI,EAAS,CACXE,UAAW,EAAKtI,MAAMsI,UACtBC,SAAU,EAAKvI,MAAMuI,UAGvBtF,IAAM/D,KAAN,UAAcd,EAAd,yBAA8CgK,EAAQ,CACpD1J,iBAAiB,IAEhByB,MAAK,SAAAC,GAEJ,EAAKd,MAAMe,QAAQD,EAASE,MAC5B,EAAKhB,MAAM4D,gBAAgB,eAAe,MAG3CxC,OAAM,SAAAC,GACLtC,QAAQC,IAAIqC,OAzDC,EA6DnBmF,iBAAmB,SAAAhG,GACjBA,EAAMC,iBAEN,IAAIgG,EAAc,CAChBC,MAAO,CACLrG,KAAM,EAAKK,MAAMgG,MAAMrG,KACvBsG,QAAS,EAAKjG,MAAMgG,MAAMC,QAC1BC,IAAK,EAAKlG,MAAMgG,MAAME,IACtBC,IAAK,EAAKnG,MAAMgG,MAAMG,MAK1BlD,IAAM/D,KAAN,UAAcd,EAAd,0BAA+C2H,EAAa,CAC1DrH,iBAAiB,IAEhByB,MAAK,SAAAC,GAGJ,EAAKd,MAAMe,QAAQD,EAASE,MAC5BjC,QAAQC,IAAI,gBACZ,EAAKgB,MAAM4D,gBAAgB,iBAAiB,MAE7CxC,OAAM,SAAAC,GACLtC,QAAQC,IAAIqC,OArFC,EAyFnBwC,aAAe,SAAArD,GACbzB,QAAQC,IAAI,EAAK0B,OACjB,EAAKP,SAAL,eAAiBK,EAAMJ,OAAOC,KAAOG,EAAMJ,OAAOE,SAxFlD,EAAKI,MAAQ,CACXsI,UAAW,GACXC,SAAU,GACVtE,SAAU,GAOV6C,OAAO,GAbQ,E,sEAoIT,IAAD,OACP,OAAItF,KAAKlC,MAAMkJ,gBAEX,oCACE,kBAAC,EAAD,eACEjF,GAAG,qBACC/B,KAAKlC,MAFX,CAGE6E,OAAQ3C,KAAKlC,MAAM6E,OACnB9D,QAASmB,KAAKlC,MAAMe,WAEtB,yBAAKqB,UAAU,eAAemC,MAAOoE,GACnC,yBAAKvG,UAAU,qBAEjB,kBAACiE,EAAA,EAAD,CAAWjE,UAAU,qBACnB,sCACU,IACPF,KAAKlC,MAAMsE,SAAWpC,KAAKlC,MAAMsE,QAAQ0E,WAE5C,iCACE,kBAAC7G,EAAA,EAAD,CAAME,SAAUH,KAAK2G,sBACnB,kBAAC1G,EAAA,EAAKG,MAAN,CAAYC,UAAU,YACpB,kBAACwF,EAAA,EAAD,wBACA,kBAACG,EAAA,EAAD,CACExF,KAAK,OACLrC,KAAK,WACLuC,aAAcV,KAAKlC,MAAMsE,SAAWpC,KAAKlC,MAAMsE,QAAQK,SACvD9B,SAAU,SAAA3C,GAAC,OAAI,EAAK2D,aAAa3D,IACjCyC,YAAY,oBAIhB,6BACE,kBAACG,EAAA,EAAD,CAAQJ,KAAK,UAAb,YAIJ,kBAACP,EAAA,EAAD,CAAME,SAAUH,KAAK6G,kBACnB,kBAAC5G,EAAA,EAAKG,MAAN,CAAYC,UAAU,QACpB,kBAACwF,EAAA,EAAD,oBACA,kBAACG,EAAA,EAAD,CACExF,KAAK,OACLrC,KAAK,YACLuC,aAAcV,KAAKlC,MAAMsE,SAAWpC,KAAKlC,MAAMsE,QAAQ0E,UACvDnG,SAAU,SAAA3C,GAAC,OAAI,EAAK2D,aAAa3D,IACjCyC,YAAY,0BAEd,kBAACoF,EAAA,EAAD,mBACA,kBAACG,EAAA,EAAD,CACExF,KAAK,OACLrC,KAAK,WACLuC,aAAcV,KAAKlC,MAAMsE,SAAWpC,KAAKlC,MAAMsE,QAAQ2E,SACvDpG,SAAU,SAAA3C,GAAC,OAAI,EAAK2D,aAAa3D,IACjCyC,YAAY,0BAGhB,6BACE,kBAACG,EAAA,EAAD,CAAQJ,KAAK,UAAb,YAIJ,6BACA,6BAEA,kBAAC,EAAD,CAAOkB,gBAAiB1B,KAAKlC,MAAM4D,gBAAiBkD,QAAS5E,KAAKlC,MAAM8G,QACtExC,QAASpC,KAAKlC,MAAMsE,QAASiD,SAAS,SACxC,6BAEJ,kBAAC,EAAD,CAAO3D,gBAAiB1B,KAAKlC,MAAM4D,gBAAiBkD,QAAS5E,KAAKlC,MAAM8G,QAClExC,QAASpC,KAAKlC,MAAMsE,QAASiD,SAAS,SAExC,gCAQD,kBAAC,EAAD,U,GAnNwBxE,aCXhBoG,E,2MACnBC,YAAc,WACR,EAAKpJ,MAAMsE,SACb,EAAKtE,MAAMiB,QAAQC,KAAK,U,wEAK1B,OADAgB,KAAKkH,cAEH,kBAAC/C,EAAA,EAAD,KACE,kBAACtB,EAAD,CACEG,OAAO,gDACPW,MAAM,OAER,kBAAC,EAAD,iBAAe3D,KAAKlC,MAApB,CAA2BwB,SAAS,e,GAdTuB,aCIdsG,E,2MACnB3I,MAAQ,G,EACRT,YAAc,SAAAC,GAAC,OAAI,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAE7DC,iBAAmB,SAAML,GAAN,eAAAX,EAAAC,OAAA,uDACjBU,EAAEO,iBADe,WAAAlB,EAAA,MAEAF,EAAQQ,MAAM,EAAKa,QAFnB,OAEbf,EAFa,OAGjB,EAAKK,MAAMiB,QAAQC,KAAK,SACxB,EAAKlB,MAAMe,QAAX,eAAwBpB,EAAKqB,OAJZ,sC,wEAQjB,OACE,oCACE,kBAAC,EAAD,eACEiD,GAAG,qBACC/B,KAAKlC,MAFX,CAGEF,OAAQoC,KAAKlC,MAAMF,OACnBiB,QAASmB,KAAKlC,MAAMe,WAEtB,yBAAKqB,UAAU,aAAamC,MAAOrC,KAAK+C,iBACtC,yBAAK7C,UAAU,mBAEjB,kBAACiE,EAAA,EAAD,CAAWjE,UAAU,mBACnB,sCACA,kBAACD,EAAA,EAAD,CAAMC,UAAU,aAAaC,SAAUH,KAAK3B,kBAC1C,kBAAC4B,EAAA,EAAKG,MAAN,CAAYC,UAAU,SACpB,kBAACJ,EAAA,EAAKK,MAAN,cACA,kBAACL,EAAA,EAAKM,QAAN,CACEpC,KAAK,QACLqC,KAAK,QACLC,YAAY,cACZC,aAAcV,KAAKxB,MAAMC,MACzBkC,SAAUX,KAAKjC,eAInB,kBAACkC,EAAA,EAAKG,MAAN,CAAYC,UAAU,YACpB,kBAACJ,EAAA,EAAKK,MAAN,iBACA,kBAACL,EAAA,EAAKM,QAAN,CACEpC,KAAK,WACLqC,KAAK,WACLC,YAAY,WACZC,aAAcV,KAAKxB,MAAME,SACzBiC,SAAUX,KAAKjC,eAGnB,kBAACkC,EAAA,EAAKG,MAAN,KACE,kBAACQ,EAAA,EAAD,CAAQJ,KAAK,UAAb,iB,GAhDqBK,aCTpB,SAASuG,EAAQtJ,GAwB9B,OAAO,oCAvBO,WACZ,IAAIuJ,EAAS5J,EAmBb,OAjBIK,EAAMsE,UAGNiF,GAFF5J,EAAOK,EAAMsE,SACJ0E,UAEL,oCACE,uCAAarJ,EAAKqJ,YAKpB,oCACE,uCAAarJ,EAAKgF,YAMnB4E,EAGCC,I,aCxBG,SAASC,EAAmBzJ,GACzC,OACE,oCACE,4BAAKA,EAAM0J,OACX,4BAAK1J,EAAM0I,cCEF,SAASiB,EAAgB3J,GACtC,OACE,oCACE,kBAAC,gBAAD,CAAekE,GAAI,cAAgBlE,EAAM4J,OACvC,kBAAC9G,EAAA,EAAD,KACE,kBAAC,IAAD,CAAiB2B,KAAMoF,QAG3B,kBAAC,gBAAD,CAAe3F,GAAI,gBAAkBlE,EAAM4J,OACzC,kBAAC9G,EAAA,EAAD,KACE,kBAAC,IAAD,CAAiB2B,KAAMqF,SCXlB,SAASC,GAAS/J,GAC/B,OACE,kBAACgK,EAAA,EAAD,CAAM5H,UAAU,YAAY6H,IAAKjK,EAAMkK,KAAKC,KAC1C,kBAAC9D,EAAA,EAAD,CAAWjE,UAAU,cACnB,kBAACqH,EAAD,CACEC,MAAO1J,EAAMkK,KAAKR,MAClBhB,YAAa1I,EAAMkK,KAAKxB,eAG5B,kBAACrC,EAAA,EAAD,CAAWjE,UAAU,iBACnB,kBAACuH,EAAD,CAAiBC,MAAO5J,EAAMkK,KAAKC,QCX5B,SAASC,GAAUpK,GAUhC,OAAO,kBAACqG,EAAA,EAAD,KARDgE,OAAOC,KAAKtK,EAAMuK,OAAOC,OAAS,EAC7B,wCAGFxK,EAAMuK,MAAMjC,KAAI,SAAA4B,GACrB,OAAO,kBAACH,GAAD,CAAUG,KAAMA,EAAMD,IAAKC,EAAKC,U,ICNxBM,G,iLAMjB,OACE,kBAACpE,EAAA,EAAD,KACE,kBAACiD,EAAYpH,KAAKlC,OAClB,kBAACoK,GAAD,CAAWG,MAAOrI,KAAKlC,MAAM0K,qB,GATC3H,aCajB4H,I,kNACnBC,cAAgB,WACd,OAAI,EAAK5K,MAAM6K,eAAeL,OAAS,EAC9B,EAAKxK,MAAM6K,eAEX,I,wEAST,OACE,oCACE,kBAAC,EAAD,eACE5G,GAAG,qBACC/B,KAAKlC,MAFX,CAGE6E,OAAQ3C,KAAKlC,MAAM6E,OACnB9D,QAASmB,KAAKlC,MAAMe,QACpBI,UAAWe,KAAKlC,MAAMmB,aAExB,yBAAK8C,GAAG,aACN,2BAAOA,GAAG,gBACR,kBAACoC,EAAA,EAAD,KACE,wBAAIjE,UAAU,kBAAd,YACA,kBAAC,gBAAD,CAAeA,UAAU,eAAe8B,GAAG,aACzC,wBAAI9B,UAAU,SACZ,4BACE,4BACE,kBAAC,IAAD,CAAiBqC,KAAMqG,IAASC,UAAQ,IAD1C,YAON,kBAAC,gBAAD,CAAe3I,UAAU,eAAe8B,GAAG,eACzC,wBAAI9B,UAAU,SACZ,4BACE,4BACE,kBAAC,IAAD,CAAiBqC,KAAMuG,IAASD,UAAQ,IAD1C,YAQN,wBAAI3I,UAAU,kBAAd,SACA,yBAAKA,UAAU,gBACb,kBAAC,gBAAD,CAAe8B,GAAG,cAChB,wBAAI9B,UAAU,SACZ,4BACE,4BACE,kBAAC,IAAD,CAAiBqC,KAAMwG,IAAQF,UAAQ,IADzC,YAQR,kBAAC,gBAAD,CAAe3I,UAAU,eAAe8B,GAAG,cACzC,wBAAI9B,UAAU,SACZ,4BACE,4BACE,kBAAC,IAAD,CAAiBqC,KAAMyG,IAAaH,UAAQ,IAD9C,WAQN,wBAAI3I,UAAU,kBAAd,QACA,kBAACU,EAAA,EAAD,CAAQmB,GAAG,YACT,4BACE,kBAAC,IAAD,CAAiBQ,KAAM0G,UAM/B,6BAASlH,GAAG,gBACV,kBAAC,GAAD,iBAAc/B,KAAKlC,MAAnB,CAA0B0K,cAAexI,KAAK0I,0B,GAlFxB7H,c,SCDbqI,G,YAGnB,WAAYpL,GAAQ,IAAD,8BACjB,4CAAMA,KAMRqL,cAAgB,SAAA7K,GACdA,EAAMC,iBACN,IAAMiJ,EAAQ,EAAKhJ,MAAMgJ,MACnBhB,EAAc,EAAKhI,MAAMgI,YAC5BgB,GAEDxK,IACCU,KADD,UAEKd,EAFL,cAGE,CAAE4K,QAAOhB,eACT,CAAEtJ,iBAAiB,IAElByB,MAAK,WAEJ,EAAKV,SAAS,CAAEuJ,MAAO,GAAIhB,YAAa,KACxC,EAAK1I,MAAMmB,YACX,EAAKnB,MAAMsL,qBAGZlK,OAAM,SAAAkG,GAAK,OAAIvI,QAAQC,IAAIsI,OA1Bf,EA6BnBzD,aAAe,SAAArD,GAAS,MAEEA,EAAMJ,OAAtBC,EAFc,EAEdA,KAAMC,EAFQ,EAERA,MACd,EAAKH,SAAL,eAAiBE,EAAOC,KA9BxB,EAAKI,MAAQ,CACXgJ,MAAO,IAHQ,E,sEAoCT,IAAD,OACP,OACE,kBAACjC,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,KACE,kBAACvF,EAAA,EAAD,CAAME,SAAUH,KAAKmJ,eACnB,kBAACpD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACExF,KAAK,OACLrC,KAAK,QACLC,MAAO4B,KAAKxB,MAAMgJ,MAClB7G,SAAU,SAAA3C,GAAC,OAAI,EAAK2D,aAAa3D,IACjCqL,UAAU,EACV5I,YAAY,aACZ6I,aAAW,aACXC,mBAAiB,iBAEnB,kBAACxD,EAAA,EAAWE,OAAZ,KACE,kBAACrF,EAAA,EAAD,CACEkB,QAAQ,oBACRY,QAAS1C,KAAKmJ,eAEd,kBAAC,IAAD,CAAiB5G,KAAM2D,MAJzB,kB,GAzDqBrF,aCJhB0H,G,YACnB,WAAYzK,GAAQ,IAAD,8BACjB,4CAAMA,KAiBR0L,WAAa,SAAAC,GACX5M,QAAQC,IAAI2M,IAnBK,EA0BnBC,gBAAkB,WAEhB,OAAO,EAAK5L,MAAM6K,eAAevC,KAAI,SAAA4B,GACnC,OACE,kBAACzC,EAAA,EAAD,CACEwC,IAAKC,EAAKC,IACV9J,KAAK,QAOL,kBAACqH,EAAA,EAAD,KACE,4BAAKwC,EAAKR,QAEZ,kBAAChC,EAAA,EAAD,KACE,4BAAKwC,EAAKxB,cAEZ,kBAAChB,EAAA,EAAD,KAEE,kBAAC5E,EAAA,EAAD,CAAQyB,MAAO,CAAEsH,OAAQ,QACvB,kBAAC,IAAD,CAAiBpH,KAAMqH,OAGzB,kBAAC,QAAD,CAAM5H,GAAI,cAAgBgG,EAAKC,IAAKnG,QAAQ,WAC1C,kBAAClB,EAAA,EAAD,CAAQyB,MAAO,CAAEsH,OAAQ,QACvB,kBAAC,IAAD,CAAiBpH,KAAMoF,QAG3B,kBAAC,QAAD,CAAM3F,GAAI,gBAAkBgG,EAAKC,KAC/B,kBAACrH,EAAA,EAAD,CAAQyB,MAAO,CAAEsH,OAAQ,OAAS7H,QAAQ,UACxC,kBAAC,IAAD,CAAiBS,KAAMqF,cA1DlB,EAmEnBiC,YAAc,WAEZ,EAAK5L,SAAS,CAAEmL,iBAAkB,EAAK5K,MAAM4K,mBAnE7C,EAAK5K,MAAQ,CACX4K,iBAAiB,EACjB5B,MAAO,IAJQ,E,sEAuFjB,OAFA3K,QAAQC,IAAI,mBAGV,6BACGkD,KAAKlC,MAAMsE,QACV,6BACE,kBAAC,EAAD,eACEL,GAAG,qBACC/B,KAAKlC,MAFX,CAGE6E,OAAQ3C,KAAKlC,MAAM6E,OACnB9D,QAASmB,KAAKlC,MAAMe,QACpBI,UAAWe,KAAKlC,MAAMmB,aAExB,kBAACkF,EAAA,EAAD,KACGnE,KAAKlC,MAAMsE,QAAQ0E,UAClB,uCAAa9G,KAAKlC,MAAMsE,QAAQ0E,WAEhC,uCAAa9G,KAAKlC,MAAMsE,QAAQK,UAGlC,kBAAC8C,EAAA,EAAD,CAAKlD,MAAO,CAAEsH,OAAQ,QACpB,kBAACnE,EAAA,EAAD,CAAKsE,GAAI,GACP,kBAAClJ,EAAA,EAAD,CAAQ8B,QAAS1C,KAAK6J,aAAtB,aAEF,kBAACrE,EAAA,EAAD,CAAKsE,GAAI,GACP,2BACErJ,YAAY,oBACZtC,KAAK,SACLwC,SAAUX,KAAKlC,MAAMiM,qBAK1B/J,KAAKxB,MAAM4K,gBACV,kBAAC,GAAD,CACEnK,UAAWe,KAAKlC,MAAMmB,UACtBmK,gBAAiBpJ,KAAK6J,cAGxB,GAGF,yBAAK9H,GAAG,kBACL/B,KAAKlC,OAASkC,KAAK0J,qBAK1B,6BACE,kBAAC,EAAD,eACE3H,GAAG,qBACC/B,KAAKlC,MAFX,CAGE6E,OAAQ3C,KAAKlC,MAAM6E,OACnB9D,QAASmB,KAAKlC,MAAMe,QACpBI,UAAWe,KAAKlC,MAAMmB,aAExB,+EACA,kBAAC,gBAAD,CAAe+C,GAAG,WAChB,kBAACpB,EAAA,EAAD,uB,GAhJwBC,a,SC0FvBmJ,G,YAtFb,WAAYlM,GAAQ,IAAD,8BACjB,4CAAMA,KAoBRmM,iBAAmB,SAAA3L,GACjBA,EAAMC,iBAEN,IAAMiJ,EAAQ,EAAKhJ,MAAMgJ,MACnBhB,EAAc,EAAKhI,MAAMgI,YAC/BxJ,IACGU,KADH,UAEOd,EAFP,0BAEgC,EAAKkB,MAAMoM,MAAMC,OAAOpI,IACpD,CAAEyF,QAAOhB,eACT,CAAEtJ,iBAAiB,IAEpByB,MAAK,WAEJ,EAAKV,SAAS,CAAEuJ,MAAO,GAAIhB,YAAa,KACxC,EAAK1I,MAAMmB,YACX,EAAKnB,MAAMiB,QAAQC,KAAK,YAEzBE,OAAM,SAAAkG,GAAK,OAAIvI,QAAQC,IAAIsI,OAtCb,EAyCnBzD,aAAe,SAAArD,GAAS,MAEEA,EAAMJ,OAAtBC,EAFc,EAEdA,KAAMC,EAFQ,EAERA,MACd,EAAKH,SAAL,eAAiBE,EAAOC,KA1CxB,EAAKI,MAAQ,CACXgJ,MAAO,GACPhB,YAAa,IAJE,E,iFAQE,IAAD,OAClB3J,QAAQC,IAAIkD,MAEZhD,IACGO,IADH,UACUX,EADV,0BACmCoD,KAAKlC,MAAMoM,MAAMC,OAAOpI,IAAM,CAC7D7E,iBAAiB,IAElByB,MAAK,SAAAyL,GACJvN,QAAQC,IAAIsN,EAAItL,MAChB,EAAKb,SAASmM,EAAItL,W,+BA6Bd,IAAD,OACP,OACE,6BACE,kBAAC,EAAD,eACEiD,GAAG,qBACC/B,KAAKlC,MAFX,CAGE6E,OAAQ3C,KAAKlC,MAAM6E,OACnB9D,QAASmB,KAAKlC,MAAMe,QACpBI,UAAWe,KAAKlC,MAAMmB,aAExB,kBAACkF,EAAA,EAAD,KACE,kBAAClE,EAAA,EAAD,CAAME,SAAUH,KAAKiK,kBACnB,kBAACpE,EAAA,EAAD,KACG,IACD,kBAAC,IAAD,CAAiBtD,KAAM8H,MAFzB,WAIA,kBAACrE,EAAA,EAAD,CACExF,KAAK,OACLrC,KAAK,QACLC,MAAO4B,KAAKxB,MAAMgJ,MAClB7G,SAAU,SAAA3C,GAAC,OAAI,EAAK2D,aAAa3D,IACjCqL,UAAQ,IAEV,kBAACxD,EAAA,EAAD,qBACA,kBAACG,EAAA,EAAD,CACExF,KAAK,OACLrC,KAAK,cACLC,MAAO4B,KAAKxB,MAAMgI,YAClB7F,SAAU,SAAA3C,GAAC,OAAI,EAAK2D,aAAa3D,MAEnC,kBAACsM,GAAA,EAAD,KACE,4BAAQpK,UAAU,mBAAlB,kB,GA9ESW,aCbF2I,G,4LACE,IAAD,OAClBxM,IACGuN,OADH,UACa3N,EADb,4BACwCoD,KAAKlC,MAAMoM,MAAMC,OAAOpI,IAAM,CAClE7E,iBAAiB,IAElByB,MAAK,WAEJ,EAAKV,SAAS,CAAEuJ,MAAO,GAAIhB,YAAa,KACxC,EAAK1I,MAAMmB,YACX,EAAKnB,MAAMiB,QAAQC,KAAK,YAEzBE,OAAM,SAAAkG,GAAK,OAAIvI,QAAQC,IAAIsI,Q,+BAI9B,OAAQ,6BAAK,kBAAC,EAAD,W,GAhBuBxC,IAAM/B,WCGzB2J,G,YACnB,WAAY1M,GAAQ,IAAD,8BACjB,4CAAMA,KAIR6D,aAAe,SAAA8C,GACX5H,QAAQC,IAAI2H,GACd,EAAKxG,SAAS,CAAEwG,aAPC,EAUnBM,aAAe,SAAAN,GACbO,2BAAiBP,GACd9F,MAAK,SAAAsG,GAAO,OAAIC,oBAAUD,EAAQ,OAClCtG,MAAK,SAAAwG,GACHtI,QAAQC,IAAI,UAAWqI,GACpB,EAAKlH,SAAS,CACVwG,QAASA,EACTC,IAAMS,EAAOT,IACbC,IAAMQ,EAAOR,MAEjB9H,QAAQC,IAAI,EAAK0B,UAGtBU,OAAM,SAAAkG,GAAK,OAAIvI,QAAQuI,MAAM,QAASA,OArBzC,EAAK5G,MAAQ,CAAEiG,QAAS,GAAIC,IAAK,GAAIC,IAAK,IAFzB,E,sEA2BjB,OACE,kBAAC,IAAD,CACEvG,MAAO4B,KAAKxB,MAAMiG,QAClB9D,SAAUX,KAAK2B,aACf8D,SAAUzF,KAAK+E,eAGd,gBAAGW,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,YAAaC,EAA/B,EAA+BA,uBAAwBxB,EAAvD,EAAuDA,QAAvD,OACC,6BACE,0BACMsB,EAAc,CAChBjF,YAAa,oBACbP,UAAW,2BAGf,yBAAKA,UAAU,mCACZkE,GAAW,2CACXuB,EAAYS,KAAI,SAAAC,GACf,IAAMnG,EAAYmG,EAAWC,OACzB,0BACA,kBAEEjE,EAAQgE,EAAWC,OACrB,CAAE5C,gBAAiB,UAAW6C,OAAQ,WACtC,CAAE7C,gBAAiB,UAAW6C,OAAQ,WAC1C,OACE,wBACMX,EAAuBS,EAAY,CACrCnG,YACAmC,UAGF,8BAAOgE,EAAWG,0B,GA5DW5D,IAAM/B,W,0BCgVxC4J,G,YA5Tb,WAAY3M,GAAQ,IAAD,8BACjB,4CAAMA,KAwBR8G,QAAU,WACRnD,IAAMlE,IAAN,UAAaX,EAAb,mBAAuC,CAAEM,iBAAiB,IACvDyB,MAAK,SAAAyL,GAEAA,EAAItL,MACN,EAAKD,QAAQuL,EAAItL,MACjB,EAAKG,YACL,EAAKyL,mBAAL,UACKN,EAAItL,KAAK2D,SADd,4BAEE,GAEFkI,YAAW,WACT,EAAK1M,SAAS,CAAC2M,YAAY,MAC3B,OAEF,EAAKF,mBAAL,kCAA0D,GAC1DC,YAAW,WACT,EAAK1M,SAAS,CAAC2M,YAAY,MAC3B,SAGL1L,OAAM,SAAAC,GACL,EAAKuL,mBAAL,gEAC2DvL,IACzD,OAjDW,EAyDnBF,UAAY,WACVwC,IAAMlE,IAAN,UAAaX,EAAb,cAAkC,CAAEM,iBAAiB,IAClDyB,MAAK,SAAAyL,GACJ,EAAKnM,SAAS,CACZ4M,YAAaT,EAAItL,KACjB6J,eAAgByB,EAAItL,KACpBkI,iBAAiB,IAEnB,EAAK0D,mBAAL,wCAAgE,MAEjExL,OAAM,SAAAC,GACL,EAAKuL,mBAAL,+CAC0CvL,IACxC,OAtEW,EA8EnBN,QAAU,SAAAuD,GACR,EAAKnE,SAAS,CACZ6M,aAAc1I,KAhFC,EAuFnBO,OAAS,WACPlB,IAAMlE,IAAN,UAAaX,EAAb,eAAmC,CAAEM,iBAAiB,IACnDyB,MAAK,SAAAyL,GACJ,EAAKvL,QAAQ,MACb,EAAKZ,SAAS,CACZ4M,YAAa,GACblC,eAAgB,GAChB3B,iBAAiB,IAEnB,EAAK0D,mBAAL,UAA2BN,EAAItL,KAAKuI,UAAW,MAEhDnI,OAAM,SAAAC,GACL,EAAKuL,mBAAL,wCAAyDvL,IAAO,OAnGnD,EA4GnBuL,mBAAqB,SAACrD,EAAS0D,GACzBA,EACF,EAAK9M,SAAS,CACZ+M,WAAY3D,IAGd,EAAKpJ,SAAS,CACZgN,SAAU5D,IAKdsD,YAAW,WACT,EAAK1M,SAAS,CACZgN,SAAU,KACVD,WAAY,SAEb,OA7Hc,EAmInBE,gBAAkB,SAAAlN,GAChB,IAAMmN,EAAqBnN,EAAEE,OAAOE,MAEhCgN,EADa,YAAO,EAAK5M,MAAMqM,aACDQ,QAAO,SAAAC,GACvC,OAAOA,EAAS9D,MACb+D,cACAC,SAASL,EAAmBI,kBAGjC,EAAKtN,SAAS,CACZ0K,eAAgByC,KA3IlB,EAAK5M,MAAQ,CACXsM,aAAc,KACdD,YAAa,GACblC,eAAgB,GAChB3B,iBAAiB,EACjBiE,SAAU,KACVD,WAAY,KACZJ,YAAY,GATG,E,iFAkBjB/N,QAAQC,IAAI,aACZkD,KAAK4E,Y,+BA8HG,IAAD,OAGP,OAFA/H,QAAQC,IAAI,aAAckD,KAAKxB,MAAMoM,YAEjC5K,KAAKxB,MAAMoM,WAEX,oCACG5K,KAAKxB,MAAMwM,YACV,kBAACS,GAAA,EAAD,CAAO3J,QAAS,WAAY9B,KAAKxB,MAAMwM,YAGxChL,KAAKxB,MAAMyM,UACV,kBAACQ,GAAA,EAAD,CAAO3J,QAAS,UAAW9B,KAAKxB,MAAMyM,UAGxC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACES,OAAK,EACLC,KAAK,IACLC,OAAQ,SAAA9N,GAAK,OACX,kBAAC,EAAD,iBACMA,EADN,CAEEsE,QAAS,EAAK5D,MAAMsM,aACpBnI,OAAQ,EAAKA,OACb9D,QAAS,EAAKA,QACdI,UAAW,EAAKA,UAChByC,gBAAiB,EAAKgJ,yBAI5B,kBAAC,IAAD,CACEgB,OAAK,EACLC,KAAK,UACLC,OAAQ,SAAA9N,GAAK,OACX,kBAAC,EAAD,iBACMA,EADN,CAEEsE,QAAS,EAAK5D,MAAMsM,aACpBnI,OAAQ,EAAKA,OACb9D,QAAS,EAAKA,QACd6C,gBAAiB,EAAKgJ,mBACtBzL,UAAW,EAAKA,gBAItB,kBAAC,IAAD,CACEyM,OAAK,EACLC,KAAK,SACLC,OAAQ,SAAA9N,GAAK,OACX,kBAAC,EAAD,iBACMA,EADN,CAEEsE,QAAS,EAAK5D,MAAMsM,aACpBnI,OAAQ,EAAKA,OACb9D,QAAS,EAAKA,QACdI,UAAW,EAAKA,gBAItB,kBAAC,IAAD,CACEyM,OAAK,EACLC,KAAK,cACLC,OAAQ,SAAA9N,GAAK,OACX,kBAAC,EAAD,iBACMA,EADN,CAEEsE,QAAS,EAAK5D,MAAMsM,aACpBnI,OAAQ,EAAKA,OACb9D,QAAS,EAAKA,cAIpB,kBAAC,IAAD,CACE6M,OAAK,EACLC,KAAK,WACLC,OAAQ,SAAA9N,GAAK,OACX,kBAAC,EAAD,iBACMA,EADN,CAEEsE,QAAS,EAAK5D,MAAMsM,aACpBnI,OAAQ,EAAKA,OACbiC,QAAS,EAAKA,QACdlD,gBAAiB,EAAKgJ,mBACtB7L,QAAS,EAAKA,QACdmI,gBAAiB,EAAKxI,MAAMwI,sBAIlC,kBAAC,IAAD,CACE0E,OAAK,EACLC,KAAK,QACLC,OAAQ,SAAA9N,GAAK,OACX,kBAAC,GAAD,iBACMA,EADN,CAEEsE,QAAS,EAAK5D,MAAMsM,aACpBnI,OAAQ,EAAKA,OACb9D,QAAS,EAAKA,QACdyG,MAAO,EAAK9G,MAAM8G,MAClBqD,eAAgB,EAAKnK,MAAMmK,eAC3BoB,iBAAkB,EAAKmB,gBACvBxJ,gBAAiB,EAAKgJ,mBACtBzL,UAAW,EAAKA,gBAItB,kBAAC,IAAD,CACEyM,OAAK,EACLC,KAAK,SACLC,OAAQ,SAAA9N,GAAK,OACX,kBAAC,GAAD,iBACMA,EADN,CAEEsE,QAAS,EAAK5D,MAAMsM,aACpBnI,OAAQ,EAAKA,OACb9D,QAAS,EAAKA,QACd8J,eAAgB,EAAKnK,MAAMmK,eAC3BoB,iBAAkB,EAAKmB,gBACvBxJ,gBAAiB,EAAKgJ,mBACtBzL,UAAW,EAAKA,gBAItB,kBAAC,IAAD,CACEyM,OAAK,EACLC,KAAK,YACLC,OAAQ,SAAA9N,GAAK,OACX,kBAAC,GAAD,iBACMA,EADN,CAEEsE,QAAS,EAAK5D,MAAMsM,aACpBnI,OAAQ,EAAKA,OACb9D,QAAS,EAAKA,QACd8J,eAAgB,EAAKnK,MAAMmK,eAC3BoB,iBAAkB,EAAKmB,gBACvBjM,UAAW,EAAKA,gBAItB,kBAAC,IAAD,CACEyM,OAAK,EACLC,KAAK,iBACLC,OAAQ,SAAA9N,GAAK,OACX,kBAAC,GAAD,iBACMA,EADN,CAEEsE,QAAS,EAAK5D,MAAMsM,aACpBnI,OAAQ,EAAKA,OACb9D,QAAS,EAAKA,QACd8J,eAAgB,EAAKnK,MAAMmK,eAC3BoB,iBAAkB,EAAKmB,gBACvBjM,UAAW,EAAKA,gBAItB,kBAAC,IAAD,CACEyM,OAAK,EACLC,KAAK,mBACLC,OAAQ,SAAA9N,GAAK,OACX,kBAAC,GAAD,iBACMA,EADN,CAEEsE,QAAS,EAAK5D,MAAMsM,aACpBnI,OAAQ,EAAKA,OACb9D,QAAS,EAAKA,QACd8J,eAAgB,EAAKnK,MAAMmK,eAC3BoB,iBAAkB,EAAKmB,gBACvBjM,UAAW,EAAKA,gBAItB,kBAAC,IAAD,CAAOyM,OAAK,EAACC,KAAK,QAAQE,UAAWC,OAKpC,kBAAC,EAAD,U,GAxTKlJ,IAAM/B,WCfJkL,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShC,MACvB,2D,aChBSiC,gBAAqB,ICMpCC,IAASR,OACP,kBAAC,cAAD,CAAYS,SAAUC,IACpB,kBAAC,GAAD,CAAKvN,QAASA,MAEhBkC,SAASC,eAAe,SFuHpB,kBAAmBqL,WACrBA,UAAUC,cAAclH,MAAM3G,MAAK,SAAA8N,GACjCA,EAAaC,iB","file":"static/js/main.7419260e.chunk.js","sourcesContent":["let baseURL;\n\nprocess.env.NODE_ENV === \"production\"\n  ? //? (baseURL = 'here should be your production endpoint')\n    (baseURL = \"https://cloudtaskr.herokuapp.com\")\n  : (baseURL = \"http://localhost:5000\");\n\n  export default baseURL","import axios from \"axios\";\nimport baseURL from \"./base\";\n// let baseURL;\nconsole.log(baseURL);\n// process.env.NODE_ENV === \"production\"\n//   ? //? (baseURL = 'here should be your production endpoint')\n//     (baseURL = window.location.origin)\n//   : (baseURL = \"http://localhost:5000\");\n\nconst service = axios.create({ withCredentials: true, baseURL });\n\nconst actions = {\n  isLoggedIn: async () => {\n    return await service.get(\"/api/isLoggedIn\");\n  },\n  signUp: async user => {\n    return await service.post(\"/api/signup\", user);\n  },\n  logIn: async user => {\n    return await service.post(\"/api/login\", user);\n  },\n  logOut: async () => {\n    return await service.get(\"/api/logout\");\n  }\n};\n\nexport default actions;\n\n/**\n * import axios from 'axios';\nlet baseURL;\n\nprocess.env.NODE_ENV === 'production'\n  //? (baseURL = 'here should be your production endpoint')\n  ? (baseURL = window.location.origin)\n  : (baseURL = 'http://localhost:5000');\n\nconst service = axios.create({ withCredentials: true, baseURL });\n\nconst actions = {\n  isLoggedIn: async () => {\n    return await service.get('/is-logged-in');\n  },\n  signUp: async (user) => {\n    return await service.post('/signup', user);\n  },\n  logIn: async (user) => {\n    return await service.post('/login', user);\n  },\n  logOut: async () => {\n    return await service.get('/logout');\n  }\n};\n\nexport default actions;\n\n */\n","import React, { Component } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\n// import Axios from \"axios\";\n\n// Custom Components\n// import baseURL from \"../../services/base\";\nimport actions from \"../../services/index\";\n\n// Styling\nimport \"../Login/Login.css\";\n\nexport default class LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: String,\n      password: String,\n      classesAndIds: {},\n      labels: true\n    };\n  }\n\n  componentDidMount() {\n    this.classesAndIds(this.props.formType);\n  }\n  handleInput = e => this.setState({ [e.target.name]: e.target.value });\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.email) {\n      let user = {\n        email: this.state.email,\n        password: this.state.password\n      };\n\n      // Axios.post(`${baseURL}/api/login`, user, {\n      //   withCredentials: true\n      // })\n      actions\n        .logIn(user)\n        .then(response => {\n          // console.log(\"handleFormSubmit\");\n          this.setState({\n            email: \"\",\n            password: \"\"\n          });\n          this.props.setUser(response.data);\n          this.props.history.push(\"/task\");\n          this.props.fetchData();\n        })\n        .catch(err => {\n          // console.log(err);\n        });\n    } else {\n      // figure out how to flash message\n      // console.log(\"please input both email and password\");\n      this.toggleLoginButtonOff();\n    }\n  };\n  //   form-class-name, formGroupEmailId, formGroupEmailClass, formGroupPasswordId, formGroupPasswordClass\n  classesAndIds = formType => {\n    let values, labels;\n    if (formType === \"menu\") {\n      values = {\n        formClassName: \"menu-login-form\",\n        formGroupEmailId: \"menuEmail\",\n        formGroupEmailClass: \"menu-form-el\",\n        formGroupPassword: \"menuPassword\",\n        formGroupPasswordClass: \"menu-form-el\",\n        formButtonClass: \"menu-form-el delay-show\"\n      };\n      labels = false;\n    } else if (formType === \"form\") {\n      values = {\n        formClassName: \"login-form\",\n        formGroupEmailId: \"loginFormEmail\",\n        formGroupEmailClass: \"login-form-el\",\n        formGroupPassword: \"loginPassword\",\n        formGroupPasswordClass: \"login-form-el\",\n        formButtonClass: \"\"\n      };\n      labels = true;\n    }\n    this.setState({\n      classesAndIds: { ...values },\n      labels: labels\n    });\n  };\n  render() {\n    return (\n      <>\n        <Form\n          className={this.state.classesAndIds.formClassName}\n          onSubmit={this.handleFormSubmit}\n        >\n          <Form.Group\n            controlId={this.state.classesAndIds.formGroupEmailId}\n            className={this.state.classesAndIds.formGroupEmailClass}\n          >\n            {this.state.labels && <Form.Label>Email</Form.Label>}\n            <Form.Control\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter email\"\n              defaultValue={this.state.email}\n              onChange={this.handleInput}\n            />\n          </Form.Group>\n\n          <Form.Group\n            controlId={this.state.classesAndIds.formGroupPassword}\n            className={this.state.classesAndIds.formGroupPasswordClass}\n          >\n            {this.state.labels && <Form.Label>Password</Form.Label>}\n            <Form.Control\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              defaultValue={this.state.password}\n              onChange={this.handleInput}\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Button\n              className={this.state.classesAndIds.formButtonClass}\n              type=\"submit\"\n            >\n              Login\n            </Button>\n          </Form.Group>\n        </Form>\n      </>\n    );\n  }\n}\n","// components\nimport React from \"react\";\nimport Axios from \"axios\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport baseURL from \"../../services/base\";\n\n// Custom Components\nimport LoginForm from \"../LoginForm/LoginForm\";\n\n// Styles\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport \"./Menu.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class Menu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      hideButton: false\n    };\n  }\n  toggleLoginButton = e => {\n    let loginSection = document.getElementById(\"login-form\");\n    let toggle = !this.state.hideButton;\n    this.setState({ hideButton: toggle });\n\n    loginSection.classList.remove(\"hidden\");\n    loginSection.classList.add(\"reveal\");\n  };\n\n  toggleLoginButtonOff = e => {\n    let loginSection = document.getElementById(\"login-form\");\n    let toggle = !this.state.hideButton;\n    this.setState({ hideButton: toggle });\n\n    loginSection.classList.remove(\"reveal\");\n    loginSection.classList.add(\"hidden\");\n  };\n\n  handleLoginForm = event => {\n    event.preventDefault();\n\n    if (this.state.email) {\n      let user = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      // console.log(user);\n\n      Axios.post(`${baseURL}/api/login`, user, {\n        withCredentials: true\n      })\n        .then(response => {\n          // console.log(\"handleFormSubmit\");\n          this.setState({\n            email: \"\",\n            password: \"\"\n          });\n          this.props.setUser(response.data);\n          this.props.fetchData();\n          this.props.history.push(\"/task\");\n          this.props.setFlashMessage(\"Login successful\", true);\n        })\n        .catch(err => {\n          // this.props.setFlashMessage(\"Login failed\", false)\n          console.log(err);\n        });\n    } else {\n      // figure out how to flash message\n      console.log(\"please input both email and password\");\n      this.toggleLoginButtonOff();\n    }\n  };\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\" id={this.props.id}>\n        {/* left side navbar */}\n        <LinkContainer to=\"/\">\n          <Navbar.Brand>cloudTaskr</Navbar.Brand>\n        </LinkContainer>\n        <Nav className=\"mr-auto\">\n          <LinkContainer to=\"/\">\n            <Nav.Link>Home</Nav.Link>\n          </LinkContainer>\n          {this.props.userObj ? (\n            <LinkContainer to=\"/task\">\n              <Nav.Link>Task</Nav.Link>\n            </LinkContainer>\n          ) : (\n            <></>\n          )}\n        </Nav>\n\n        {/* right side navbar */}\n        {/* condition ? (true) : (false) */}\n        {this.props.userObj ? (\n          <Nav>\n            <LinkContainer to=\"/account\">\n              <Nav.Link className=\"sign-up\">\n                <h5 style={{ color: \"white\" }}>\n                  <FontAwesomeIcon icon={faUser} />{\" \"}\n                  {this.props.userObj.username}\n                </h5>\n              </Nav.Link>\n            </LinkContainer>\n            <LinkContainer to=\"/\">\n              <Nav.Link className=\"sign-up\" onClick={this.props.logout}>\n                Logout\n              </Nav.Link>\n            </LinkContainer>\n          </Nav>\n        ) : (\n          <>\n            <Nav>\n              <LinkContainer to=\"/signup\">\n                <Nav.Link className=\"sign-up\">Signup</Nav.Link>\n              </LinkContainer>\n            </Nav>\n            {/* login code block */}\n            <Nav className=\"menu-form\">\n              <div id=\"login-form\" className=\"hidden\">\n                <LoginForm {...this.props} formType=\"menu\" />\n              </div>\n              {this.state.hideButton === false && (\n                <Nav.Link id=\"login\" onClick={this.toggleLoginButton}>\n                  Login\n                </Nav.Link>\n              )}\n            </Nav>\n          </>\n        )}\n      </Navbar>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function BackgroundWithOverlay(props) {\n  let background = {\n    backgroundImage:\n      \"url(\" + process.env.PUBLIC_URL + \"/images/\" + props.imgUrl,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    height: \"100%\",\n    width: \"100%\",\n    zIndex: -1,\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"none\"\n  };\n\n  let overlay = {\n    backgroundColor: \"rgba(0, 0, 0, \" + props.alpha + \")\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\"\n  };\n\n  return (\n    <div style={background}>\n      <div style={overlay}></div>\n    </div>\n  );\n}\n","// Components\nimport React from \"react\";\nimport Menu from \"../Menu/Menu\";\n\n// Custom Components\nimport BackgroundWithOverlay from \"../BackgroundWithOverlay/BackgroundWithOverlay\";\n\n// Styling\nimport { Jumbotron, Button } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport \"./Landing.css\";\n\nexport default class Landing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    console.log('Render Landing')\n    return (\n      <>\n        {/* HERO, landing page background image */}\n        <BackgroundWithOverlay\n          imgUrl=\"estee-janssens-2enBTsIVhUU-unsplash.jpg\"\n          alpha=\".6\"\n        />\n\n        {/* welcome statement */}\n        <Jumbotron className=\"hero-container\">\n          <h1 className=\"landing-title\">\n            Get more done in your day with cloudTaskr\n          </h1>\n          <div>\n            <LinkContainer to=\"/signup\">\n              <Button>Get Started</Button>\n            </LinkContainer>\n          </div>\n        </Jumbotron>\n\n        {/* navbar */}\n        <Menu\n          id=\"landingMenuSticky\"\n          {...this.props}\n          logout={this.props.logout}\n          setUser={this.props.setUser}\n          fetchData={this.props.fetchData}\n          setFlashMessage = {this.props.setFlashMessage}\n        />\n\n        {/* Section 1 */}\n        <section className=\"landingWhat\">\n          <h3>What does cloudTaskr do?</h3>\n        </section>\n        {/* Section 2 */}\n        <section className=\"landingHow\">\n          <h3>How does cloudTaskr work?</h3>\n        </section>\n        {/* Section 3 */}\n        <section className=\"landingCall\">\n          <h3>Call to Action</h3>\n        </section>\n        {/* Footer */}\n        <footer className=\"landingFooter\">\n          <h3>Footer content</h3>\n        </footer>\n      </>\n    );\n  }\n}\n","// Components\nimport React, { Component } from \"react\";\nimport { Container, Button, Form } from \"react-bootstrap\";\nimport Axios from \"axios\";\nimport baseURL from \"../../services/base\";\n\n// Project Components\nimport Menu from \"../Menu/Menu\";\n// import actions from \"../../services/index\";\n\n// Styling\nimport \"./SignUp.css\";\n\nexport default class Signup extends Component {\n  // state = {\n  //   email: \"testing\"+Math.random()+\"@mail.com\",\n  //   password: \"12345678\",\n  // }\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSignUpForm = event => {\n    event.preventDefault();\n\n    if (this.state.email) {\n      let user = {\n        email: this.state.email,\n        password: this.state.password,\n        username: \"CloudTaskr\" + Math.floor(Math.random() * 500)\n      };\n\n      Axios.post(`${baseURL}/api/signup`, user, { withCredentials: true })\n        .then(response => {\n          this.setState({\n            email: \"\",\n            password: \"\"\n          });\n          this.props.history.push(\"/task\");\n          this.props.setUser(response.data);\n          // this.props.setFlashMessage(\"Sign up successful\", true)\n        })\n        .catch(err => {\n          // this.props.setFlashMessage(\"Sign up failed\", false)\n          console.log(err);\n        });\n    }\n  };\n\n  backgroundImage = {\n    backgroundImage:\n      \"url(\" +\n      process.env.PUBLIC_URL +\n      \"/images/books-business-computer-connection-459654.jpg)\"\n  };\n\n  render() {\n    return (\n      <>\n        <Menu\n          id=\"landingMenuSticky\"\n          {...this.props}\n          logOut={this.props.logOut}\n          setUser={this.props.setUser}\n          fetchData={this.props.fetchData}\n          setFlashMessage={this.props.setFlashMessage}\n        />\n        <div className=\"sign-up-page\" style={this.backgroundImage}>\n          <div className=\"sign-up-overlay\"></div>\n        </div>\n        <Container className=\"sign-up-container\">\n          <h1>Join today!</h1>\n          <Form className=\"sign-up-form\" onSubmit={this.handleSignUpForm}>\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Enter email\"\n                defaultValue={this.state.email}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                defaultValue={this.state.password}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <div>\n              <Button type=\"submit\">SignUp</Button>\n            </div>\n          </Form>\n        </Container>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport './loading.css'\n\nexport default class loading extends Component {\n  render() {\n    return (\n      <div className=\"bouncing-loader\">\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { FormLabel, InputGroup, Row, Col } from \"react-bootstrap\";\nimport baseURL from \"../../../services/base\";\nimport Axios from \"axios\";\n//components\n// import ZoneSearchInput from \"../../ZoneSearchInput/ZoneSearchInput\"\n\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng\n} from \"react-places-autocomplete\";\n\nimport \"../../../services/googleapi\";\n\n// Styling\nimport \"../Account.css\";\nimport { Form, FormControl, Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave, faStopCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class Zones extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // autocompleteInput: \"\",\n      zones: {\n        name: this.props.userObj.zones.name && this.props.zoneName,\n        address: this.props.userObj.zones.address,\n        lat: this.props.userObj.zones.lat,\n        lng: this.props.userObj.zones.lng\n      },\n      ready: true\n    };\n  }\n  handleZoneUpdate = event => {\n    event.preventDefault();\n\n    let updateZones = {\n      zones: {\n        name: this.state.zones.name,\n        address: this.state.zones.address,\n        lat: this.state.zones.lat,\n        lng: this.state.zones.lng\n        // name: \"1\", address: \"2\", lat: \"3\", lng: \"4\"\n      }\n    };\n\n    Axios.post(`${baseURL}/api/editprofile/zones`, updateZones, {\n      withCredentials: true\n    })\n      .then(response => {\n        this.props.setFlashMessage(\"Zones are set\", true);\n        // this.props.history.push(\"/tasks\");\n        // this.props.setUser(response.data);\n        this.props.getUser();\n        // console.log(\"Zone Updated\");\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleZonesChange = event => {\n    let zones = { ...this.state.zones };\n    zones[event.target.name] = event.target.value;\n    // console.log(zones);\n    this.setState({ zones: zones });\n    // this.props.getUser();\n  };\n\n  clearHandleZoneChange = () => {\n    this.setState({\n      zones: {\n        name: \"\",\n        address: \"\",\n        lat: \"\",\n        lng: \"\"\n      }\n    });\n  };\n\n  handleChange = address => {\n    // console.log(address);\n    this.setState({ zones: { address: address } });\n  };\n\n  handleSelect = address => {\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => {\n        console.log(\"Success\", latLng);\n        this.setState({\n          // autocompleteInput: address,\n          zones: {\n            name: this.state.zones.name,\n            address: address,\n            lat: latLng.lat,\n            lng: latLng.lng\n          }\n        });\n        console.log(this.state);\n      })\n      .catch(error => console.error(\"Error\", error));\n  };\n  render() {\n    // console.log(this.props);\n    console.log(this.state);\n    // console.log(\"userObj zones.name\",this.props.userObj.zones.name)\n    // console.log(\"state zones.name\",this.props.zones.name)\n    return (\n      <Row>\n        <Col>\n          <Form onSubmit={this.handleZoneUpdate}>\n            <PlacesAutocomplete\n              name=\"address\"\n              value={this.state.zones.address}\n              onChange={this.handleChange}\n              onSelect={this.handleSelect}\n            >\n              {({\n                getInputProps,\n                suggestions,\n                getSuggestionItemProps,\n                loading\n              }) => (\n                <>\n                  <FormLabel>{this.props.zoneName.toUpperCase()}: </FormLabel>\n                  <InputGroup>\n                    <FormControl\n                      {...getInputProps({\n                        placeholder: \"Search Places ...\",\n                        className: \"location-search-input\"\n                      })}\n                    />\n                    <FormControl\n                      type=\"hidden\"\n                      name=\"name\"\n                      value={this.state.zones.name}\n                      // defaultValue={this.props.userObj && this.props.userObj.zones.name}\n                      // onChange={e => this.handleZonesChange(e)}\n                      // placeholder=\"Home\"\n                    />\n                    <FormControl\n                      type=\"hidden\"\n                      name=\"lat\"\n                      value={this.state.zones.lat}\n                      // defaultValue={this.props.userObj && this.props.userObj.zones.lat}\n                      // onChange={e => this.handleZonesChange(e)}\n                      // placeholder=\"Enter a number\"\n                    />\n                    <FormControl\n                      type=\"hidden\"\n                      name=\"lng\"\n                      value={this.state.zones.lng}\n                      // defaultValue={this.props.userObj && this.props.userObj.zones.lng}\n                      // onChange={e => this.handleZonesChange(e)}\n                      // placeholder=\"Enter a number\"\n                    />\n\n                    <InputGroup.Append>\n                      <Button\n                        variant=\"outline-secondary\"\n                        onClick={this.handleZoneUpdate}\n                      >\n                        <FontAwesomeIcon icon={faSave} /> Save\n                      </Button>\n                    </InputGroup.Append>\n                    <InputGroup.Append>\n                      <Button\n                        variant=\"outline-secondary\"\n                        onClick={this.clearHandleZoneChange}\n                      >\n                        <FontAwesomeIcon icon={faStopCircle} /> Clear\n                      </Button>\n                    </InputGroup.Append>\n                  </InputGroup>\n                  <div className=\"autocomplete-dropdown-container\">\n                    {loading && <div>Loading...</div>}\n                    {suggestions.map(suggestion => {\n                      const className = suggestion.active\n                        ? \"suggestion-item--active\"\n                        : \"suggestion-item\";\n                      // inline style for demonstration purpose\n                      const style = suggestion.active\n                        ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n                        : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n                      return (\n                        <div\n                          {...getSuggestionItemProps(suggestion, {\n                            className,\n                            style\n                          })}\n                        >\n                          <span>{suggestion.description}</span>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </>\n              )}\n            </PlacesAutocomplete>\n            {/* <ZoneSearchInput /> */}\n          </Form>\n        </Col>\n      </Row>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Container, FormLabel } from \"react-bootstrap\";\nimport baseURL from \"../../services/base\";\n\n// Custom componenets\nimport Menu from \"../Menu/Menu\";\nimport Loading from \"../Loading/Loading\";\n\n// Styling\nimport \"./Account.css\";\nimport { Form, FormControl, Button } from \"react-bootstrap\";\nimport Axios from \"axios\";\nimport Zones from \"./Zones/Zones\";\n\nlet pageBackground = {\n  backgroundImage:\n    \"url(\" + process.env.PUBLIC_URL + \"/images/light-sun-cloud-japan-45848.jpg)\"\n};\nexport default class Account extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      firstName: '',\n      lastName: '',\n      username: '',\n      // zones: {\n      //   name: '',\n      //   address: '',\n      //   lat: '',\n      //   lng: \"\"\n      // },\n      ready: true\n    }\n  }\n\n  handleUsernameUpdate = event => {\n    event.preventDefault();\n\n    let update = {\n      username: this.state.username\n    };\n\n    Axios.post(`${baseURL}/api/editprofile/username`, update, {\n      withCredentials: true\n    })\n      .then(response => {\n        \n        // this.props.history.push(\"/tasks\");\n        this.props.setUser(response.data);\n        this.props.setFlashMessage(\"Username is set\", true)\n        // this.props.getUser();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleNameUpdate = event => {\n    event.preventDefault();\n\n    let update = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName\n    };\n\n    Axios.post(`${baseURL}/api/editprofile/name`, update, {\n      withCredentials: true\n    })\n      .then(response => {\n        // this.props.history.push(\"/tasks\");\n        this.props.setUser(response.data);\n        this.props.setFlashMessage(\"Name is set\", true)\n        // this.props.getUser();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleZoneUpdate = event => {\n    event.preventDefault();\n\n    let updateZones = {\n      zones: {\n        name: this.state.zones.name,\n        address: this.state.zones.address,\n        lat: this.state.zones.lat,\n        lng: this.state.zones.lng\n        // name: \"1\", address: \"2\", lat: \"3\", lng: \"4\"\n      }\n    };\n\n    Axios.post(`${baseURL}/api/editprofile/zones`, updateZones, {\n      withCredentials: true\n    })\n      .then(response => {\n        \n        // this.props.history.push(\"/tasks\");\n        this.props.setUser(response.data);\n        console.log(\"Zone Updated\");\n        this.props.setFlashMessage(\"Zones are set\", true)\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleChange = event => {\n    console.log(this.state)\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  // handleZoneUpdate = event => {\n  //   event.preventDefault();\n\n  //   let updateZones = {\n  //     zones: {\n  //       name: this.state.zones.name,\n  //       address: this.state.zones.address,\n  //       lat: this.state.zones.lat,\n  //       lng: this.state.zones.lng\n  //       // name: \"1\", address: \"2\", lat: \"3\", lng: \"4\"\n  //     }\n  //   };\n\n  //   Axios.post(`${baseURL}/api/editprofile/zones`, updateZones, {\n  //     withCredentials: true\n  //   })\n  //     .then(response => {\n        \n  //       this.props.setFlashMessage(\"Zones are set\", true)\n  //       // this.props.history.push(\"/tasks\");\n  //       // this.props.setUser(response.data);\n\n  //       this.props.getUser();\n  //       console.log(\"Zone Updated\");\n  //     })\n  //     .catch(err => {\n  //       console.log(err);\n  //     });\n  // };\n\n  // handleZonesChange = event => {\n  //   console.log(this.state)\n  //   let zones = { ...this.state.zones };\n  //   zones[event.target.name] = event.target.value;\n  //   console.log(event.target.vale);\n  //   this.setState({ zones: zones });\n  //   // this.props.getUser();\n  // };\n  render() {\n    if (this.props.taskDataIsReady) {\n      return (\n        <>\n          <Menu\n            id=\"landingMenuSticky\"\n            {...this.props}\n            logout={this.props.logout}\n            setUser={this.props.setUser}\n          />\n          <div className=\"account-page\" style={pageBackground}>\n            <div className=\"account-overlay\"></div>\n          </div>\n          <Container className=\"account-container\">\n            <h1>\n              Welcome{\" \"}\n              {this.props.userObj && this.props.userObj.firstName}\n            </h1>\n            <section>\n              <Form onSubmit={this.handleUsernameUpdate}>\n                <Form.Group controlId=\"username\">\n                  <FormLabel>Set a Username:</FormLabel>\n                  <FormControl\n                    type=\"text\"\n                    name=\"username\"\n                    defaultValue={this.props.userObj && this.props.userObj.username}\n                    onChange={e => this.handleChange(e)}\n                    placeholder=\"Set a username\"\n                  />\n                </Form.Group>\n\n                <div>\n                  <Button type=\"submit\">Update</Button>\n                </div>\n              </Form>\n\n              <Form onSubmit={this.handleNameUpdate}>\n                <Form.Group controlId=\"name\">\n                  <FormLabel>First Name:</FormLabel>\n                  <FormControl\n                    type=\"text\"\n                    name=\"firstName\"\n                    defaultValue={this.props.userObj && this.props.userObj.firstName}\n                    onChange={e => this.handleChange(e)}\n                    placeholder=\"Enter your first name\"\n                  />\n                  <FormLabel>Last name:</FormLabel>\n                  <FormControl\n                    type=\"text\"\n                    name=\"lastName\"\n                    defaultValue={this.props.userObj && this.props.userObj.lastName}\n                    onChange={e => this.handleChange(e)}\n                    placeholder=\"Enter your last name\"\n                  />\n                </Form.Group>\n                <div>\n                  <Button type=\"submit\">Update</Button>\n                </div>\n              </Form>\n\n              <hr />\n              <hr />\n\n              <Zones setFlashMessage={this.props.setFlashMessage} getUser={this.props.getUser} \n                userObj={this.props.userObj} zoneName=\"home\" />\n              <hr />\n\n          <Zones setFlashMessage={this.props.setFlashMessage} getUser={this.props.getUser} \n                userObj={this.props.userObj} zoneName=\"work\" />\n            \n              <hr />\n\n            \n            </section>\n          </Container>\n        </>\n      );\n    } else {\n      return <Loading />;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\n\n// Custom Components\nimport BackgroundWithOverlay from \"../../Components/BackgroundWithOverlay/BackgroundWithOverlay\";\nimport LoginForm from \"../../Components/LoginForm/LoginForm\";\n\nexport default class Login extends Component {\n  checkIfUser = () => {\n    if (this.props.userObj) {\n      this.props.history.push(\"/task\");\n    }\n  };\n  render() {\n    this.checkIfUser();\n    return (\n      <Container>\n        <BackgroundWithOverlay\n          imgUrl=\"books-business-computer-connection-459654.jpg\"\n          alpha=\".2\"\n        />\n        <LoginForm {...this.props} formType=\"form\" />\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Container, Button, Form } from \"react-bootstrap\";\n\n// Custom Components\nimport Menu from \"../Menu/Menu\";\n\n// Styling\nimport \"../Login/Login.css\";\n\nimport actions from \"../../services/index\";\n\nexport default class LogIn extends Component {\n  state = {};\n  handleInput = e => this.setState({ [e.target.name]: e.target.value });\n\n  handleFormSubmit = async e => {\n    e.preventDefault();\n    let user = await actions.logIn(this.state);\n    this.props.history.push(\"/task\");\n    this.props.setUser({ ...user.data });\n  };\n\n  render() {\n    return (\n      <>\n        <Menu\n          id=\"landingMenuSticky\"\n          {...this.props}\n          logOut={this.props.logOut}\n          setUser={this.props.setUser}\n        />\n        <div className=\"login-page\" style={this.backgroundImage}>\n          <div className=\"login-overlay\"></div>\n        </div>\n        <Container className=\"login-container\">\n          <h1>Log In</h1>\n          <Form className=\"login-form\" onSubmit={this.handleFormSubmit}>\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Enter email\"\n                defaultValue={this.state.email}\n                onChange={this.handleInput}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                defaultValue={this.state.password}\n                onChange={this.handleInput}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Button type=\"submit\">Login</Button>\n            </Form.Group>\n          </Form>\n        </Container>\n      </>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function Welcome(props) {\n  let welcome = () => {\n    let message, user;\n\n    if (props.userObj) {\n      user = props.userObj;\n      if (user.firstName) {\n        message = (\n          <>\n            <h2>Welcome {user.firstName}</h2>\n          </>\n        );\n      } else {\n        message = (\n          <>\n            <h2>Welcome {user.username}</h2>\n          </>\n        );\n      }\n    }\n\n    return message;\n  };\n\n  return <>{welcome()}</>;\n}\n","import React from \"react\";\n\nexport default function DisplayTaskDetails(props) {\n  return (\n    <>\n      <h5>{props.title}</h5>\n      <h6>{props.description}</h6>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\n// Style Components\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function DisplayControls(props) {\n  return (\n    <>\n      <LinkContainer to={\"/task/edit/\" + props.theId}>\n        <Button>\n          <FontAwesomeIcon icon={faEdit} />\n        </Button>\n      </LinkContainer>\n      <LinkContainer to={\"/task/delete/\" + props.theId}>\n        <Button>\n          <FontAwesomeIcon icon={faTrash} />\n        </Button>\n      </LinkContainer>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Card, Container } from \"react-bootstrap\";\n\n// Customer Components\nimport DisplayTaskDetails from \"./DisplayTaskDetails\";\nimport DisplayControls from \"./DisplayControls\";\n\nexport default function ShowTask(props) {\n  return (\n    <Card className=\"task-card\" key={props.task._id}>\n      <Container className=\"task-title\">\n        <DisplayTaskDetails\n          title={props.task.title}\n          description={props.task.description}\n        />\n      </Container>\n      <Container className=\"task-controls\">\n        <DisplayControls theId={props.task._id} />\n      </Container>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\n// Custom Components\nimport ShowTask from \"./ShowTask\";\n\nexport default function ShowTasks(props) {\n  let displayAllTasks = () => {\n    if (Object.keys(props.tasks).length < 1) {\n      return <h3>No Tasks</h3>;\n    }\n\n    return props.tasks.map(task => {\n      return <ShowTask task={task} key={task._id} />;\n    });\n  };\n  return <Container>{displayAllTasks()}</Container>;\n}\n","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\n\n// Custom Components\nimport Welcome from \"../../Components/Messages/Welcome\";\nimport ShowTasks from \"../../Components/Task/ShowTasks\";\n\nexport default class TaskList extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  render() {\n    return (\n      <Container>\n        <Welcome {...this.props} />\n        <ShowTasks tasks={this.props.viewableTasks} />\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Container, Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faInbox,\n  faHome,\n  faBriefcase,\n  faPlus,\n  faCloud\n} from \"@fortawesome/free-solid-svg-icons\";\n\n// Project Components\nimport Menu from \"../../Components/Menu/Menu\";\nimport TaskList from \"../../Containers/TaskPage/TaskList\";\n// import AddTaskModal from \"../../Components/test-tasks/addTaskModal\";\n\n// Styling\nimport \"../../Components/Task/Task.css\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nexport default class Task extends Component {\n  checkForTasks = () => {\n    if (this.props.filterTaskList.length > 0) {\n      return this.props.filterTaskList;\n    } else {\n      return {};\n    }\n  };\n\n  // addTasks = () => {\n  //   return <AddTaskModal />;\n  // };\n\n  render() {\n    return (\n      <>\n        <Menu\n          id=\"landingMenuSticky\"\n          {...this.props}\n          logout={this.props.logout}\n          setUser={this.props.setUser}\n          fetchData={this.props.fetchData}\n        />\n        <div id=\"task-page\">\n          <aside id=\"task-sidebar\">\n            <Container>\n              <h2 className=\"sidebar-header\">Sections</h2>\n              <LinkContainer className=\"sidebar-item\" to=\"/task/all\">\n                <ul className=\"fa-ul\">\n                  <li>\n                    <h4>\n                      <FontAwesomeIcon icon={faCloud} listItem />\n                      Tasks\n                    </h4>\n                  </li>\n                </ul>\n              </LinkContainer>\n              <LinkContainer className=\"sidebar-item\" to=\"/task/inbox\">\n                <ul className=\"fa-ul\">\n                  <li>\n                    <h4>\n                      <FontAwesomeIcon icon={faInbox} listItem />\n                      Inbox\n                    </h4>\n                  </li>\n                </ul>\n              </LinkContainer>\n\n              <h3 className=\"sidebar-header\">Zones</h3>\n              <div className=\"sidebar-item\">\n                <LinkContainer to=\"/task/home\">\n                  <ul className=\"fa-ul\">\n                    <li>\n                      <h4>\n                        <FontAwesomeIcon icon={faHome} listItem />\n                        Home\n                      </h4>\n                    </li>\n                  </ul>\n                </LinkContainer>\n              </div>\n              <LinkContainer className=\"sidebar-item\" to=\"/task/work\">\n                <ul className=\"fa-ul\">\n                  <li>\n                    <h4>\n                      <FontAwesomeIcon icon={faBriefcase} listItem />\n                      Work\n                    </h4>\n                  </li>\n                </ul>\n              </LinkContainer>\n\n              <h3 className=\"sidebar-header\">Tags</h3>\n              <Button id=\"add-task\">\n                <h3>\n                  <FontAwesomeIcon icon={faPlus} />\n                </h3>\n              </Button>\n            </Container>\n          </aside>\n\n          <section id=\"task-section\">\n            <TaskList {...this.props} viewableTasks={this.checkForTasks()} />\n          </section>\n          \n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Col,\n  Row,\n  FormControl,\n  InputGroup,\n  Form\n} from \"react-bootstrap\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\n\n\nimport axios from \"axios\";\nimport baseURL from \"../../services/base\";\n\n\n\nexport default class addTask extends Component {\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\"\n    };\n  }\n\n  handleAddTask = event => {\n    event.preventDefault();\n    const title = this.state.title;\n    const description = this.state.description;\n    if(title){\n\n      axios\n      .post(\n        `${baseURL}/api/tasks`,\n        { title, description },\n        { withCredentials: true }\n        )\n        .then(() => {\n          // this.props.getData();\n          this.setState({ title: \"\", description: \"\" });\n          this.props.fetchData();\n          this.props.showAddTaskMenu();\n          // this.props.history.push(\"/tasks\");\n        })\n        .catch(error => console.log(error));\n      }\n  };\n  handleChange = event => {\n    // console.log(event, event.target, event.target.value);\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n\n  render() {\n    return (\n      <Row>\n      \n        <Col>\n          <Form onSubmit={this.handleAddTask}>\n            <InputGroup>\n              <FormControl\n                type=\"text\"\n                name=\"title\"\n                value={this.state.title}\n                onChange={e => this.handleChange(e)}\n                required={true}\n                placeholder=\"Add a task\"\n                aria-label=\"Add a task\"\n                aria-describedby=\"basic-addon2\"\n              />\n              <InputGroup.Append>\n                <Button\n                  variant=\"outline-secondary\"\n                  onClick={this.handleAddTask}\n                >\n                  <FontAwesomeIcon icon={faSave} /> Save\n                </Button>\n                {/* <Button variant=\"outline-secondary\"><FontAwesomeIcon icon={} /> Cancel</Button> */}\n              </InputGroup.Append>\n            </InputGroup>\n          </Form>\n        </Col>\n      </Row>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Menu from \"../Menu/Menu\";\nimport { Button, Container, Row } from \"react-bootstrap\";\nimport { Col } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faEdit,\n  faTrash,\n  faEllipsisV\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AddTask from \"./addTask\";\n\n// import AddTask from \"./addTask\";\nexport default class TaskList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAddTaskMenu: false,\n      title: \"\"\n    };\n  }\n\n  // filterTasksByTag = tag => {\n  //   let tasksCopy = [...this.state.listOfTasks];\n  //   let filterTasksByTag = tasksCopy.filter(eachTask => {\n  //     return eachTask.title.toLowerCase().includes(tag.toLowerCase());\n  //   });\n\n  //   this.setState({\n  //     filterTasks: filterTasksByTag\n  //   });\n  // };\n  deleteTask = taskID => {\n    console.log(taskID);\n    // axios.post(`${baseURL}/api/task/delete/${taskID}`,{withCredentials: true})\n    // .then(res=>{\n    //   this.props.fetchData()\n    //   this.props.history.push(\"/task\");\n    // })\n  };\n  displayAllTasks = () => {\n    // console.log(this.props.filterTaskList)\n    return this.props.filterTaskList.map(task => {\n      return (\n        <Row\n          key={task._id}\n          name=\"task\"\n          // style={{\n          //   display: \"flex\",\n          //   padding: \"5px\",\n          //   justifyContent: \"space-between\"\n          // }}\n        >\n          <Col>\n            <h5>{task.title}</h5>\n          </Col>\n          <Col>\n            <h6>{task.description}</h6>\n          </Col>\n          <Col>\n            {/* <Link to={\"/task/edit/\" + task._id}> */}\n            <Button style={{ margin: \"5px\" }}>\n              <FontAwesomeIcon icon={faEllipsisV} />\n            </Button>\n            {/* </Link> */}\n            <Link to={\"/task/edit/\" + task._id} variant=\"warning\">\n              <Button style={{ margin: \"5px\" }}>\n                <FontAwesomeIcon icon={faEdit} />\n              </Button>\n            </Link>\n            <Link to={\"/task/delete/\" + task._id}>\n              <Button style={{ margin: \"5px\" }} variant=\"danger\">\n                <FontAwesomeIcon icon={faTrash} />\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n      );\n    });\n  };\n\n  addTaskMenu = () => {\n    // console.log(\"Add Task Menu\");\n    this.setState({ showAddTaskMenu: !this.state.showAddTaskMenu });\n  };\n\n  // componentDidMount() {\n  //   // if (this.props.userObj === \"\") {\n  //   //   return this.props.history.push(\"/signup\");\n  //   // } else {\n  //     this.displayAllTasks();\n  //   // }\n  // }\n\n  // notAuthorized = () => {\n  //       return this.props.history.push('/signup')\n  // }\n\n  render() {\n    console.log(\"Render taskList\");\n\n    return (\n      <div>\n        {this.props.userObj ? (\n          <div>\n            <Menu\n              id=\"landingMenuSticky\"\n              {...this.props}\n              logout={this.props.logout}\n              setUser={this.props.setUser}\n              fetchData={this.props.fetchData}\n            />\n            <Container>\n              {this.props.userObj.firstName ? (\n                <h2>Welcome {this.props.userObj.firstName}</h2>\n              ) : (\n                <h2>Welcome {this.props.userObj.username}</h2>\n              )}\n\n              <Row style={{ margin: \"5px\" }}>\n                <Col sm={4}>\n                  <Button onClick={this.addTaskMenu}>Add Task</Button>\n                </Col>\n                <Col sm={8}>\n                  <input\n                    placeholder=\"Search for a task\"\n                    name=\"search\"\n                    onChange={this.props.searchTasksInput}\n                  />\n                </Col>\n              </Row>\n\n              {this.state.showAddTaskMenu ? (\n                <AddTask\n                  fetchData={this.props.fetchData}\n                  showAddTaskMenu={this.addTaskMenu}\n                />\n              ) : (\n                \"\"\n              )}\n              {/* <button onClick={this.displayAllTasks}>Filter</button> */}\n              <div id=\"main-task-list\">\n                {this.props && this.displayAllTasks()}\n              </div>\n            </Container>\n          </div>\n        ) : (\n          <div>\n            <Menu\n              id=\"landingMenuSticky\"\n              {...this.props}\n              logout={this.props.logout}\n              setUser={this.props.setUser}\n              fetchData={this.props.fetchData}\n            />\n            <h1>Not authorized, sign up to make your first task</h1>\n            <LinkContainer to=\"/signup\">\n              <Button>Sign Up</Button>\n            </LinkContainer>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n// import Axios from 'axios';\n\n// import { Row } from \"react-bootstrap\";\n// import { Col } from \"react-bootstrap\";\nimport {\n  FormControl,\n  Form,\n  FormGroup,\n  FormLabel,\n  Container\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faList } from \"@fortawesome/free-solid-svg-icons\";\nimport Menu from \"../Menu/Menu\";\nimport axios from \"axios\";\nimport baseURL from \"../../services/base\";\n\nclass EditTask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      description: \"\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(this);\n\n    axios\n      .get(`${baseURL}/api/task/edit/${this.props.match.params.id}`, {\n        withCredentials: true\n      })\n      .then(res => {\n        console.log(res.data);\n        this.setState(res.data);\n      });\n  }\n\n  handleUpdateTask = event => {\n    event.preventDefault();\n\n    const title = this.state.title;\n    const description = this.state.description;\n    axios\n      .post(\n        `${baseURL}/api/task/edit/${this.props.match.params.id}`,\n        { title, description },\n        { withCredentials: true }\n      )\n      .then(() => {\n        // this.props.getData();\n        this.setState({ title: \"\", description: \"\" });\n        this.props.fetchData();\n        this.props.history.push(\"/task\");\n      })\n      .catch(error => console.log(error));\n  };\n\n  handleChange = event => {\n    // console.log(event, event.target, event.target.value);\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n  render() {\n    return (\n      <div>\n        <Menu\n          id=\"landingMenuSticky\"\n          {...this.props}\n          logout={this.props.logout}\n          setUser={this.props.setUser}\n          fetchData={this.props.fetchData}\n        />\n        <Container>\n          <Form onSubmit={this.handleUpdateTask}>\n            <FormLabel>\n              {\" \"}\n              <FontAwesomeIcon icon={faList} /> Title:\n            </FormLabel>\n            <FormControl\n              type=\"text\"\n              name=\"title\"\n              value={this.state.title}\n              onChange={e => this.handleChange(e)}\n              required\n            />\n            <FormLabel>Description:</FormLabel>\n            <FormControl\n              type=\"text\"\n              name=\"description\"\n              value={this.state.description}\n              onChange={e => this.handleChange(e)}\n            />\n            <FormGroup>\n              <button className=\"btn btn-warning\">Update</button>\n            </FormGroup>\n          </Form>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default EditTask;\n","import React from \"react\";\nimport axios from \"axios\";\nimport baseURL from \"../../services/base\";\nimport Loading from \"../Loading/Loading\";\n\nexport default class deleteTask extends React.Component {\n  componentDidMount() {\n    axios\n      .delete(`${baseURL}/api/task/delete/${this.props.match.params.id}`, {\n        withCredentials: true\n      })\n      .then(() => {\n        // this.props.getData();\n        this.setState({ title: \"\", description: \"\" });\n        this.props.fetchData();\n        this.props.history.push(\"/task\");\n      })\n      .catch(error => console.log(error));\n  }\n\n  render() {\n    return (<div><Loading /></div>);\n  }\n}\n","import React from 'react';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\n\nimport \"../../services/googleapi\";\n \nexport default class LocationSearchInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { address: '', lat: '', lng: '' };\n  }\n \n  handleChange = address => {\n      console.log(address)\n    this.setState({ address });\n  };\n \n  handleSelect = address => {\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => \n        {console.log('Success', latLng)\n            this.setState({\n                address: address,\n                lat : latLng.lat,\n                lng : latLng.lng,\n            })\n            console.log(this.state)\n        }\n        )\n      .catch(error => console.error('Error', error));\n  };\n \n  render() {\n    return (\n      <PlacesAutocomplete\n        value={this.state.address}\n        onChange={this.handleChange}\n        onSelect={this.handleSelect}\n      >\n      \n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div>\n            <input\n              {...getInputProps({\n                placeholder: 'Search Places ...',\n                className: 'location-search-input',\n              })}\n            />\n            <div className=\"autocomplete-dropdown-container\">\n              {loading && <div>Loading...</div>}\n              {suggestions.map(suggestion => {\n                const className = suggestion.active\n                  ? 'suggestion-item--active'\n                  : 'suggestion-item';\n                // inline style for demonstration purpose\n                const style = suggestion.active\n                  ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                  : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                return (\n                  <div\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style,\n                    })}\n                  >\n                    <span>{suggestion.description}</span>\n                  </div>\n                );\n              })}\n            </div>\n\n          </div>\n        )}\n      </PlacesAutocomplete>\n    );\n  }\n}","// NPM Installs\nimport React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport baseURL from \"./services/base\";\n\n// Project Components\nimport Landing from \"./Components/Landing/Landing\";\nimport Signup from \"./Components/SignUp/Signup\";\nimport Account from \"./Components/Account/Account\";\nimport LogIn from \"./Containers/LoginPage/Login\";\nimport LogInTest from \"./Components/Login/Login\";\nimport Task from \"./Containers/TaskPage/Task\";\n\n// Testing Components\nimport TaskList from \"./Components/test-tasks/taskList\";\nimport AddTask from \"./Components/test-tasks/addTask\";\nimport EditTask from \"./Components/test-tasks/editTask\";\nimport DeleteTask from \"./Components/test-tasks/deleteTask\";\nimport ZoneSearchInput from \"./Components/ZoneSearchInput/ZoneSearchInput\";\nimport Loading from \"./Components/Loading/Loading\";\n\n// Styling\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { Alert } from \"react-bootstrap\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userLoggedIn: null,\n      listOfTasks: [],\n      filterTaskList: [],\n      taskDataIsReady: false,\n      errorMsg: null,\n      successMsg: null,\n      apiIsAwake: false\n    };\n  }\n\n  /**\n   * after the first render react will run the functions in componentDidMount()\n   * any time setState() is called React will render the components again\n   */\n  componentDidMount() {\n    console.log(\"Mount App\");\n    this.getUser();\n  }\n\n  /**\n   * make call to server to get the user data and save to set state\n   */\n  getUser = () => {\n    Axios.get(`${baseURL}/api/isLoggedIn`, { withCredentials: true })\n      .then(res => {\n        // if there is a user logged in then fetch the user data and set the state\n        if (res.data) {\n          this.setUser(res.data);\n          this.fetchData();\n          this.setFeedbackMessage(\n            `${res.data.username} successfully logged in`,\n            true\n          );\n          setTimeout(() => {\n            this.setState({apiIsAwake: true})\n          },4000)\n        } else {\n          this.setFeedbackMessage(`No user is currently logged in`, false);\n          setTimeout(() => {\n            this.setState({apiIsAwake: true})\n          },4000)\n        }\n      })\n      .catch(err => {\n        this.setFeedbackMessage(\n          `Failed to verify if there is a user logged in. Error: ${err}`,\n          false\n        );\n      });\n  };\n\n  /**\n   * make call to server to fetch user tasks and save to set state\n   */\n  fetchData = () => {\n    Axios.get(`${baseURL}/api/tasks`, { withCredentials: true })\n      .then(res => {\n        this.setState({\n          listOfTasks: res.data,\n          filterTaskList: res.data,\n          taskDataIsReady: true\n        });\n        this.setFeedbackMessage(`User's data was successfully fetched`, true);\n      })\n      .catch(err => {\n        this.setFeedbackMessage(\n          `Failed to retrieve user data. Error: ${err}`,\n          false\n        );\n      });\n  };\n\n  /**\n   * save the user data to the state\n   */\n  setUser = userObj => {\n    this.setState({\n      userLoggedIn: userObj\n    });\n  };\n\n  /**\n   * logout the user from the backend and delete all user data from state\n   */\n  logout = () => {\n    Axios.get(`${baseURL}/api/logout`, { withCredentials: true })\n      .then(res => {\n        this.setUser(null);\n        this.setState({\n          listOfTasks: [],\n          filterTaskList: [],\n          taskDataIsReady: false\n        });\n        this.setFeedbackMessage(`${res.data.message}`, true);\n      })\n      .catch(err => {\n        this.setFeedbackMessage(`Failed to logout user. Error: ${err}`, false);\n      });\n  };\n\n  /**\n   * displays flash messages to the user\n   * maybe later we can make this a component but you still will need something in state\n   * to decide when to show the component so is it worth it to make a component\n   */\n  setFeedbackMessage = (message, itIsSuccess) => {\n    if (itIsSuccess) {\n      this.setState({\n        successMsg: message\n      });\n    } else {\n      this.setState({\n        errorMsg: message\n      });\n    }\n\n    // only display message for x amount of time\n    setTimeout(() => {\n      this.setState({\n        errorMsg: null,\n        successMsg: null\n      });\n    }, 5500);\n  };\n\n  /**\n   * filter the tasks list based on the search input and save the filtered list to state\n   */\n  searchTaskInput = e => {\n    const currentSearchValue = e.target.value;\n    let tasksListCopy = [...this.state.listOfTasks];\n    let filteredTasks = tasksListCopy.filter(eachTask => {\n      return eachTask.title\n        .toLowerCase()\n        .includes(currentSearchValue.toLowerCase());\n    });\n\n    this.setState({\n      filterTaskList: filteredTasks\n    });\n  };\n\n  render() {\n    console.log(\"Render App\", this.state.apiIsAwake);\n\n    if (this.state.apiIsAwake) {\n      return (\n        <>\n          {this.state.successMsg && (\n            <Alert variant={\"success\"}>{this.state.successMsg}</Alert>\n          )}\n\n          {this.state.errorMsg && (\n            <Alert variant={\"danger\"}>{this.state.errorMsg}</Alert>\n          )}\n\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <Landing\n                  {...props}\n                  userObj={this.state.userLoggedIn}\n                  logout={this.logout}\n                  setUser={this.setUser}\n                  fetchData={this.fetchData}\n                  setFlashMessage={this.setFeedbackMessage}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/signup\"\n              render={props => (\n                <Signup\n                  {...props}\n                  userObj={this.state.userLoggedIn}\n                  logout={this.logout}\n                  setUser={this.setUser}\n                  setFlashMessage={this.setFeedbackMessage}\n                  fetchData={this.fetchData}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              render={props => (\n                <LogIn\n                  {...props}\n                  userObj={this.state.userLoggedIn}\n                  logout={this.logout}\n                  setUser={this.setUser}\n                  fetchData={this.fetchData}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/login-test\"\n              render={props => (\n                <LogInTest\n                  {...props}\n                  userObj={this.state.userLoggedIn}\n                  logout={this.logout}\n                  setUser={this.setUser}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/account\"\n              render={props => (\n                <Account\n                  {...props}\n                  userObj={this.state.userLoggedIn}\n                  logout={this.logout}\n                  getUser={this.getUser}\n                  setFlashMessage={this.setFeedbackMessage}\n                  setUser={this.setUser}\n                  taskDataIsReady={this.state.taskDataIsReady}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/task\"\n              render={props => (\n                <Task\n                  {...props}\n                  userObj={this.state.userLoggedIn}\n                  logout={this.logout}\n                  setUser={this.setUser}\n                  ready={this.state.ready}\n                  filterTaskList={this.state.filterTaskList}\n                  searchTasksInput={this.searchTaskInput}\n                  setFlashMessage={this.setFeedbackMessage}\n                  fetchData={this.fetchData}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/tasks\"\n              render={props => (\n                <TaskList\n                  {...props}\n                  userObj={this.state.userLoggedIn}\n                  logout={this.logout}\n                  setUser={this.setUser}\n                  filterTaskList={this.state.filterTaskList}\n                  searchTasksInput={this.searchTaskInput}\n                  setFlashMessage={this.setFeedbackMessage}\n                  fetchData={this.fetchData}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/task/add\"\n              render={props => (\n                <AddTask\n                  {...props}\n                  userObj={this.state.userLoggedIn}\n                  logout={this.logout}\n                  setUser={this.setUser}\n                  filterTaskList={this.state.filterTaskList}\n                  searchTasksInput={this.searchTaskInput}\n                  fetchData={this.fetchData}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/task/edit/:id\"\n              render={props => (\n                <EditTask\n                  {...props}\n                  userObj={this.state.userLoggedIn}\n                  logout={this.logout}\n                  setUser={this.setUser}\n                  filterTaskList={this.state.filterTaskList}\n                  searchTasksInput={this.searchTaskInput}\n                  fetchData={this.fetchData}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/task/delete/:id\"\n              render={props => (\n                <DeleteTask\n                  {...props}\n                  userObj={this.state.userLoggedIn}\n                  logout={this.logout}\n                  setUser={this.setUser}\n                  filterTaskList={this.state.filterTaskList}\n                  searchTasksInput={this.searchTaskInput}\n                  fetchData={this.fetchData}\n                />\n              )}\n            />\n            <Route exact path=\"/zone\" component={ZoneSearchInput} />\n          </Switch>\n        </>\n      );\n    } else {\n      return <Loading />;\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory({})","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\nimport history from \"./history\";\n\nReactDOM.render(\n  <HashRouter basename={process.env.PUBLIC_URL}>\n    <App history={history} />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}